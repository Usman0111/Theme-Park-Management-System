{"version":3,"sources":["assets/background.jpg","reducers/dataReducer.js","contexts/dataContext.js","pages/Login/Login.js","pages/Registration/Registration.js","components/ProtectedRoute/ProtectedRoute.js","pages/NotFound/NotFound.js","pages/CustomerPages/CustomerPass.js","pages/CustomerPages/PassNeeded.js","pages/CustomerPages/CustomerTimer.js","pages/CustomerPages/CustomerRides.js","pages/CustomerPages/CustomerAttractions.js","pages/CustomerPages/CustomerDashboard.js","pages/ManagerPages/ManagerChart.js","pages/ManagerPages/ManagerTable.js","pages/ManagerPages/ManagerReports.js","pages/ManagerPages/ManagerRides.js","pages/ManagerPages/ManagerAttractions.js","pages/ManagerPages/ManagerAddRide.js","pages/ManagerPages/ManagerInfoRide.js","pages/ManagerPages/ManagerInfoAttraction.js","pages/ManagerPages/ManagerAddAttraction.js","pages/ManagerPages/ManagerDashboard.js","pages/MaintainerPages/MaintainerFixRequests.js","pages/MaintainerPages/MaintainerDashboard.js","components/NothingMessage/NothingMessage.js","pages/AttendantPages/AttendantAssignment.js","pages/AttendantPages/AttendantDashboard.js","components/UserRouter/UserRouter.js","App.js","index.js"],"names":["dataReducer","state","action","type","registered","payload","DataContext","createContext","initialState","DataContextProvider","props","useReducer","data","dispatch","Provider","value","children","Alert","elevation","variant","Login","boxStyle","margin","fontSize","root","height","backgroundImage","bg","backgroundPosition","backgroundRepeat","backgroundSize","useContext","useState","openErr","setOpenErr","err","setErr","email","password","loginData","setLoginData","history","useHistory","useEffect","localStorage","getItem","push","Paper","style","square","CssBaseline","Grid","container","spacing","direction","alignItems","justify","minHeight","padding","width","align","Avatar","backgroundColor","onSubmit","e","preventDefault","axios","post","then","res","console","log","setItem","user_id","user_type","user_name","catch","response","login","TextField","label","placeholder","fullWidth","required","onChange","event","target","Button","color","Typography","Link","href","Snackbar","open","autoHideDuration","onClose","reason","severity","marginTop","useStyles","makeStyles","theme","palette","background","paper","textField","marginRight","Registration","classes","v","setV","setValue","setOpen","first_name","last_name","age","height_inch","height_feet","customerD","setCustomerD","employeeD","setEmployeeD","className","justifyContent","textAlign","marginBottom","TabContext","AppBar","position","TabList","newValue","Tab","TabPanel","employee","item","id","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","Number","custData","customer","InputLabelProps","shrink","helperText","ProtectedRoute","Component","rest","render","to","pathname","from","location","NotFound","gutterBottom","card","display","maxWidth","pos","content","flex","cover","createPass","pass","indexT","time_purchased","indexOf","indexDot","indexZ","date","slice","time","ticketId","String","customer_id","entrypass_id","expired","CustomerPass","handleClose","tickets","setTickets","passes","map","newpass","fixpass","buy_ticket","ticket","xs","Card","CardContent","Box","grey","CardMedia","image","msg","PassNeeded","renderer","hours","minutes","seconds","completed","CustomerTimer","Tooltip","title","size","Date","now","flexDirection","cardTitle","cardMedia","paddingTop","cardContent","flexGrow","buttons","paragraph","Transition","React","forwardRef","ref","Slide","CustomerRides","rides","setRides","validpass","setValidpass","timePassed","useRef","current","milliseconds","Math","round","calcSecond","time_left","openDialog","setOpenDialog","dialogHandleClose","visit","ride_id","Container","cardGrid","length","ride","md","picture","broken","rainedout","CardActions","disabled","onClick","Fragment","description","age_restriction","height_restriction","Dialog","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","CustomerAttractions","attractions","setAttractions","attraction","attraction_id","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","link","textDecoration","CustomerDashboard","useRouteMatch","url","path","options","text","icon","Toolbar","noWrap","Drawer","List","index","ListItem","ListItemIcon","ListItemText","primary","Divider","clear","setTimeout","exact","labels","datasets","scales","yAxes","ticks","beginAtZero","responsive","maintainAspectRatio","GroupedBar","StyledTableCell","withStyles","head","common","white","body","TableCell","StyledTableRow","TableRow","maxHeight","getLable","calculate","cfl","charAt","toUpperCase","getName","ridePairs","attractionPairs","undefined","ManagerTable","page","setPage","rowsPerPage","setRowsPerPage","table","setTable","parsedTable","params","report","rows","columns","reportType","row","visits","month","day","year","grab","show","usage","breakdowns","rainouts","getTable","setExcelData","TableContainer","Table","stickyHeader","TableHead","column","minWidth","TableBody","role","tabIndex","format","code","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","formControl","AdminReport","setReportType","start_date","setStartDate","end_date","setEndDate","setCalculate","setShow","setType","setRide_id","setAttraction_id","setRidePairs","setAttractionPairs","checked","snackMsg","setSnackMsg","setReport","setParams","loading","setLoading","excelData","get","pairs","reduce","acc","query","generateReport","element","marginLeft","col","InputLabel","Select","MenuItem","defaultValue","LinearProgress","ManagerChart","ManagerRides","unassinged","setUnassinged","attendant","setAttendant","ridePicked","setRidePicked","openSnack","setOpenSnack","handleCloseSnack","handleClickOpen","a","unassingedAttendants","attendant_id","currentAttendant","setArchive","config","put","archived","archive","paddingLeft","assignment_type","delete","newRide","unassgin","account_id","Managerattractions","setattractions","attractionPicked","setattractionPicked","newattraction","input","ManagerAddRide","height_restriction_feet","height_restriction_inches","editRide","setEditRide","openModal","setOpenModal","editPicture","setEditPicture","handleCloseModal","uploadPicture","formData","FormData","append","split","multiline","sumHeight","confirmCreate","IconButton","CircularProgress","hidden","files","useParams","setRide","editBool","setEditBool","currentRide","find","confrimEdit","floor","openEdit","ManagerAddattraction","setattraction","editattraction","setEditattraction","currentattraction","ManagerDashboard","ManagerReports","ManagerInfoRide","ManagerAttractions","ManagerAddAttraction","ManagerInfoAttraction","MaintainerFixRequests","openSnackbar","setOpenSnackBar","requests","setRequest","inspectIssue","setInspectIssue","fixMsg","setFixMsg","handleCloseSnackbar","req","breakdown","breakdown_date","r_id","bd_id","breakdown_id","descript","breakdown_description","attendant_name","getInfo","request","classsName","ride_name","handleClickOpenModal","maintainer_id","filter","fixRide","MaintainerDashboard","NothingMessage","message","details","AttendantAssignment","assignment","setAssignment","setDescription","retrevied","setRetreived","isRide","setIsRide","handleClickSnack","red","rainout_type","autoFocus","AttendantDashboard","UserRouter","userType","setUserType","routes","App","defaults","baseURL","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7521f4e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.867bf8a8.jpg\";","export const dataReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_REGISTERED\":\r\n      return { ...state, registered: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { dataReducer } from \"../reducers/dataReducer\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst initialState = {\r\n  registered: false,\r\n};\r\n\r\nconst DataContextProvider = (props) => {\r\n  const [data, dispatch] = useReducer(dataReducer, initialState);\r\n  return (\r\n    <DataContext.Provider value={{ data, dispatch }}>\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataContextProvider;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Grid,\r\n  Link,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport bg from \"../../assets/background.jpg\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Login = () => {\r\n  const paperStyle = {\r\n    padding: 20,\r\n    width: 280,\r\n  };\r\n  const avatarStyle = { backgroundColor: \"#3f50b5\" };\r\n  const boxStyle = { margin: \"5px 0\", fontSize: 34 };\r\n  const btnStyle = { fontSize: 15, margin: \"10px 0\" };\r\n  const root = {\r\n    height: \"100vh\",\r\n    backgroundImage: `url(${bg})`,\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n  };\r\n  //for register success\r\n  const { data, dispatch } = useContext(DataContext);\r\n\r\n  const handleCloseReg = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: \"SET_REGISTERED\", payload: false });\r\n  };\r\n\r\n  //for error\r\n  const [openErr, setOpenErr] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const handleCloseErr = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenErr(false);\r\n  };\r\n\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  let history = useHistory();\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\"http://100.26.17.215:5000/auth/login\", loginData)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        localStorage.setItem(\"user_id\", res.data.user_id);\r\n        localStorage.setItem(\"user_type\", res.data.user_type);\r\n        localStorage.setItem(\"user_name\", res.data.user_name);\r\n\r\n        history.push(\"/dashboard\");\r\n      })\r\n      .catch((err) => {\r\n        setErr(err.response.data);\r\n        console.log(err.response.data);\r\n        setOpenErr(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user_id\") && localStorage.getItem(\"user_type\")) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Paper style={root} square>\r\n      <CssBaseline />\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <Paper elevation={10} style={paperStyle}>\r\n          <Grid align=\"center\">\r\n            <Avatar style={avatarStyle}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <h2>Sign in</h2>\r\n          </Grid>\r\n          <form onSubmit={(e) => login(e)}>\r\n            <TextField\r\n              label=\"Enter Email\"\r\n              variant=\"filled\"\r\n              placeholder={\"Email\"}\r\n              fullWidth\r\n              style={boxStyle}\r\n              required\r\n              onChange={(event) => {\r\n                setLoginData({ ...loginData, email: event.target.value });\r\n              }}\r\n            />\r\n            <TextField\r\n              type=\"password\"\r\n              label=\"Enter Password\"\r\n              variant=\"filled\"\r\n              placeholder={\"Password\"}\r\n              fullWidth\r\n              required\r\n              style={boxStyle}\r\n              onChange={(event) => {\r\n                setLoginData({ ...loginData, password: event.target.value });\r\n              }}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              style={btnStyle}\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </form>\r\n          <Typography>Dont have an account?</Typography>\r\n          <Link href=\"/register\">Register Here</Link>\r\n        </Paper>\r\n        <Snackbar\r\n          open={openErr}\r\n          autoHideDuration={4000}\r\n          onClose={handleCloseErr}\r\n        >\r\n          <Alert severity=\"error\" style={{ marginTop: \"10px\" }}>\r\n            {err}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Snackbar\r\n          open={data.registered}\r\n          autoHideDuration={4000}\r\n          onClose={handleCloseReg}\r\n        >\r\n          <Alert severity=\"success\" style={{ marginTop: \"10px\" }}>\r\n            Your account was successfully created!\r\n          </Alert>\r\n        </Snackbar>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TabContext from \"@material-ui/lab/TabContext\";\r\nimport TabList from \"@material-ui/lab/TabList\";\r\nimport TabPanel from \"@material-ui/lab/TabPanel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport bg from \"../../assets/background.jpg\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { DataContext } from \"../../contexts/dataContext\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  textField: {\r\n    marginRight: theme.spacing(2),\r\n    width: \"21ch\",\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nfunction Registration() {\r\n  const classes = useStyles();\r\n  const paperStyle = {\r\n    padding: 20,\r\n    width: 900,\r\n  };\r\n  const root = {\r\n    height: \"100vh\",\r\n    backgroundImage: `url(${bg})`,\r\n    backgroundPosition: \"center\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n  };\r\n\r\n  const title = {\r\n    fontSize: \"35px\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    marginBottom: \"10px\",\r\n  };\r\n  const [v, setV] = useState(\"1\");\r\n  const [value, setValue] = useState(\"maintainer\");\r\n\r\n  //for error\r\n  const [open, setOpen] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [customerD, setCustomerD] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    age: \"\",\r\n    height_inch: \"\",\r\n    height_feet: \"\",\r\n    user_type: \"maintainer\",\r\n  });\r\n\r\n  const [employeeD, setEmployeeD] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    user_type: \"attendant\",\r\n  });\r\n\r\n  let history = useHistory();\r\n  const { dispatch } = useContext(DataContext);\r\n\r\n  const customer = (e) => {\r\n    e.preventDefault();\r\n    const height =\r\n      Number(customerD.height_feet) * 12 + Number(customerD.height_inch);\r\n    const custData = {\r\n      first_name: customerD.first_name,\r\n      last_name: customerD.last_name,\r\n      email: customerD.email,\r\n      password: customerD.password,\r\n      age: Number(customerD.age),\r\n      height,\r\n      user_type: \"customer\",\r\n    };\r\n    console.log(custData);\r\n    axios\r\n      .post(\"http://100.26.17.215:5000/auth/register\", custData)\r\n      .then((res) => {\r\n        history.push(\"/\");\r\n        console.log(res);\r\n        dispatch({ type: \"SET_REGISTERED\", payload: true });\r\n      })\r\n      .catch((err) => {\r\n        setErr(err.response.data);\r\n        console.log(err.response.data);\r\n        setOpen(true);\r\n      });\r\n  };\r\n\r\n  const employee = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    axios\r\n      .post(\"http://100.26.17.215:5000/auth/register\", {\r\n        ...employeeD,\r\n        user_type: value,\r\n      })\r\n      .then((res) => {\r\n        history.push(\"/\");\r\n        console.log(res);\r\n        dispatch({ type: \"SET_REGISTERED\", payload: true });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setErr(err.response.data);\r\n        console.log(err.response.data);\r\n        setOpen(true);\r\n      });\r\n  };\r\n\r\n  const labelChange = (event, value) => {\r\n    setValue(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n  const handleChange = (event, newValue) => {\r\n    setV(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user_id\") && localStorage.getItem(\"user_type\")) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <Paper style={root} square>\r\n      <CssBaseline />\r\n      <div className=\"registration-page\">\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"100vh\" }}\r\n        >\r\n          <Paper elevation={10} style={paperStyle}>\r\n            <div style={title}>Registration</div>\r\n            <div className={classes.root}>\r\n              <TabContext value={v}>\r\n                <AppBar position=\"static\">\r\n                  <TabList onChange={handleChange}>\r\n                    <Tab label=\"Customer Registration\" value=\"1\" />\r\n                    <Tab label=\"Employee Registration\" value=\"2\" />\r\n                  </TabList>\r\n                </AppBar>\r\n\r\n                <TabPanel value=\"2\">\r\n                  <div className=\"registration-e\">\r\n                    <form onSubmit={(e) => employee(e)}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item>\r\n                          <TextField\r\n                            required\r\n                            label=\"First Name\"\r\n                            id=\"employee-fname\"\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            onChange={(event) => {\r\n                              setEmployeeD({\r\n                                ...employeeD,\r\n                                first_name: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <TextField\r\n                            required\r\n                            label=\"Last Name\"\r\n                            id=\"employee-lname\"\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            onChange={(event) => {\r\n                              setEmployeeD({\r\n                                ...employeeD,\r\n                                last_name: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <FormControl\r\n                            onChange={(event) => {\r\n                              setEmployeeD({\r\n                                ...employeeD,\r\n                                user_type: event.target.value,\r\n                              });\r\n                            }}\r\n                            component=\"fieldset\"\r\n                          >\r\n                            <FormLabel required component=\"legend\">\r\n                              Employee Type\r\n                            </FormLabel>\r\n                            <RadioGroup\r\n                              aria-label=\"Employee Type\"\r\n                              name=\"employee\"\r\n                              value={value}\r\n                              onChange={labelChange}\r\n                            >\r\n                              <FormControlLabel\r\n                                value=\"maintainer\"\r\n                                control={<Radio />}\r\n                                label=\"Maintainer\"\r\n                              />\r\n                              <FormControlLabel\r\n                                value=\"attendant\"\r\n                                control={<Radio />}\r\n                                label=\"Attendant\"\r\n                              />\r\n                            </RadioGroup>\r\n                          </FormControl>\r\n\r\n                          <TextField\r\n                            required\r\n                            id=\"employee-email\"\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            type=\"email\"\r\n                            onChange={(event) => {\r\n                              setEmployeeD({\r\n                                ...employeeD,\r\n                                email: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <TextField\r\n                            required\r\n                            id=\"employee-password\"\r\n                            label=\"Password\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            type=\"password\"\r\n                            onChange={(event) => {\r\n                              setEmployeeD({\r\n                                ...employeeD,\r\n                                password: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <TextField\r\n                            required\r\n                            id=\"employee-cpassword\"\r\n                            label=\"Confirm Password\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            type=\"password\"\r\n                          />\r\n                        </Grid>\r\n                        <br />\r\n                        <Grid>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </form>\r\n                  </div>\r\n                </TabPanel>\r\n\r\n                <TabPanel value=\"1\">\r\n                  <div className=\"registration-c\">\r\n                    <form onSubmit={(e) => customer(e)}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item>\r\n                          <TextField\r\n                            required\r\n                            label=\"First Name\"\r\n                            id=\"customer-fname\"\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            onChange={(event) => {\r\n                              setCustomerD({\r\n                                ...customerD,\r\n                                first_name: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <TextField\r\n                            required\r\n                            label=\"Last Name\"\r\n                            id=\"customer-lname\"\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            onChange={(event) => {\r\n                              setCustomerD({\r\n                                ...customerD,\r\n                                last_name: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <TextField\r\n                            required\r\n                            variant=\"filled\"\r\n                            id=\"customer-age\"\r\n                            label=\"Age\"\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                            type=\"number\"\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            onChange={(event) => {\r\n                              setCustomerD({\r\n                                ...customerD,\r\n                                age: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <TextField\r\n                            required\r\n                            id=\"customer-hfeet\"\r\n                            margin=\"normal\"\r\n                            label=\"Height\"\r\n                            type=\"number\"\r\n                            className={classes.textField}\r\n                            helperText=\"Feet\"\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            variant=\"filled\"\r\n                            onChange={(event) => {\r\n                              setCustomerD({\r\n                                ...customerD,\r\n                                height_feet: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <TextField\r\n                            required\r\n                            className={classes.textField}\r\n                            id=\"customer-hinches\"\r\n                            label=\"Height\"\r\n                            type=\"number\"\r\n                            helperText=\"Inches\"\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            onChange={(event) => {\r\n                              setCustomerD({\r\n                                ...customerD,\r\n                                height_inch: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <TextField\r\n                            required\r\n                            className={classes.textField}\r\n                            id=\"customer-email\"\r\n                            label=\"Email\"\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            type=\"email\"\r\n                            onChange={(event) => {\r\n                              setCustomerD({\r\n                                ...customerD,\r\n                                email: event.target.value,\r\n                              });\r\n                            }}\r\n                          />\r\n                          <div item className=\"password\">\r\n                            <TextField\r\n                              required\r\n                              type=\"password\"\r\n                              id=\"filled-full-width\"\r\n                              label=\"Password\"\r\n                              fullWidth\r\n                              margin=\"normal\"\r\n                              variant=\"filled\"\r\n                              onChange={(event) => {\r\n                                setCustomerD({\r\n                                  ...customerD,\r\n                                  password: event.target.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                            <TextField\r\n                              type=\"password\"\r\n                              required\r\n                              id=\"filled-full-width\"\r\n                              label=\"Confirm Password\"\r\n                              fullWidth\r\n                              margin=\"normal\"\r\n                              variant=\"filled\"\r\n                            />\r\n                          </div>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <br />\r\n                      <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n                        Submit\r\n                      </Button>\r\n                    </form>\r\n                  </div>\r\n                </TabPanel>\r\n              </TabContext>\r\n            </div>\r\n          </Paper>\r\n          <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert severity=\"error\" style={{ marginTop: \"10px\" }}>\r\n              {err}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Grid>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem(\"user_id\") && localStorage.getItem(\"user_type\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: \"8rem\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n        404\r\n      </Typography>\r\n      <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n        Page Not Found\r\n      </Typography>\r\n      <Button variant=\"contained\" color=\"Primary\" href=\"/\">\r\n        Go back to Home\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    display: \"flex\",\r\n    maxWidth: 560,\r\n    backgroundColor: \"#1c2e4a\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  id: {\r\n    fontSize: 11,\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst createPass = (pass) => {\r\n  const indexT = pass.time_purchased.indexOf(\"T\");\r\n  const indexDot = pass.time_purchased.indexOf(\".\");\r\n  const indexZ = pass.time_purchased.indexOf(\"Z\");\r\n  return {\r\n    date: pass.time_purchased.slice(0, indexT),\r\n    time: pass.time_purchased.slice(indexT + 1, indexDot),\r\n    ticketId:\r\n      String(pass.customer_id) +\r\n      String(pass.entrypass_id) +\r\n      String(pass.time_purchased.slice(indexDot + 1, indexZ)),\r\n    expired: pass.expired,\r\n  };\r\n};\r\n\r\nfunction CustomerPass(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const [tickets, setTickets] = useState([]);\r\n\r\n  const buy_ticket = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://100.26.17.215:5000/customer/purchase-pass\", {\r\n        user_id: localStorage.getItem(\"user_id\"),\r\n      })\r\n      .then((res) => {\r\n        if (res.data === \"you already have a valid pass\") {\r\n          setErr(res.data);\r\n          setOpen(true);\r\n        } else {\r\n          const newpass = createPass(res.data);\r\n          const fixpass = { ...newpass, expired: false };\r\n          setTickets([...tickets, fixpass]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://100.26.17.215:5000/customer/get-all-pass\", {\r\n        user_id: localStorage.getItem(\"user_id\"),\r\n      })\r\n      .then((res) => {\r\n        const passes = res.data.map((pass) => createPass(pass));\r\n        setTickets(passes);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => buy_ticket(e)}>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Purchase Entry Pass\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <br></br>\r\n\r\n      <Grid container spacing={3}>\r\n        {tickets.map((ticket) => (\r\n          <Grid item xs={6}>\r\n            <Card className={classes.card}>\r\n              <CardContent className={classes.content}>\r\n                <Box color=\"#FFFFFF\">\r\n                  <Typography variant=\"h5\" component=\"h2\" align=\"center\">\r\n                    Day Entry Pass\r\n                  </Typography>\r\n                  <Typography className={classes.pos}>\r\n                    <span style={{ color: grey[400] }}>Date Purchased:</span>{\" \"}\r\n                    {ticket.date}\r\n                  </Typography>\r\n                  <Typography className={classes.pos}>\r\n                    <span style={{ color: grey[400] }}>Time Purchased:</span>{\" \"}\r\n                    {ticket.time}\r\n                  </Typography>\r\n                  <Typography className={classes.pos}>\r\n                    <span style={{ color: grey[400] }}>Status:</span>{\" \"}\r\n                    {ticket.expired ? (\r\n                      <span style={{ color: \"red\" }}>expired</span>\r\n                    ) : (\r\n                      <span style={{ color: \"green\" }}>valid</span>\r\n                    )}\r\n                  </Typography>\r\n                  <Typography className={classes.id}>\r\n                    <span style={{ color: grey[400] }}>Pass ID:</span>{\" \"}\r\n                    {ticket.ticketId}\r\n                  </Typography>\r\n                </Box>\r\n              </CardContent>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image=\"https://media.beam.usnews.com/de/2248f0a712a4c92fa641b0dd037bb7/media:01216eb80ba74e33b55f2ebe4d36faceTheme_Parks-Slow_Reopening_73567.jpg\"\r\n              />\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {err}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerPass;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: \"20px\",\r\n  },\r\n  msg: {\r\n    marginTop: \"10px\",\r\n  },\r\n});\r\n\r\nconst PassNeeded = (props) => {\r\n  const classes = useStyles();\r\n  const { type } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" color=\"Primary\" href=\"/dashboard\">\r\n        Go to pass page\r\n      </Button>\r\n      <div className={classes.msg}>\r\n        <Typography variant=\"h6\">\r\n          Valid entry pass needed to view {type}\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PassNeeded;\r\n","import React from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst Completionist = () => <span>You are good to go!</span>;\r\n\r\nconst renderer = ({ hours, minutes, seconds, completed }) => {\r\n  if (completed) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  } else {\r\n    return (\r\n      <span>\r\n        {hours}:{minutes}:{seconds}\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nconst CustomerTimer = (props) => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title={\"Time left for current pass\"}>\r\n        <Button variant=\"outlined\" style={{ marginBottom: 5 }} size=\"large\">\r\n          <AccessAlarmIcon style={{ marginRight: 5 }} />\r\n          <Countdown date={Date.now() + props.time} renderer={renderer} />\r\n        </Button>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerTimer;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport PassNeeded from \"./PassNeeded\";\r\nimport BrokenImageIcon from \"@material-ui/icons/BrokenImage\";\r\nimport OpacityIcon from \"@material-ui/icons/Opacity\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport CustomerTimer from \"./CustomerTimer\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardTitle: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    justifyContent: \"center\",\r\n  },\r\n  buttons: {\r\n    paddingTop: 0,\r\n  },\r\n  paragraph: {\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst calcSecond = (timePassed) => {\r\n  const hours = timePassed.hours ? timePassed.hours : 0;\r\n  const minutes = timePassed.minutes ? timePassed.minutes : 0;\r\n  const seconds = timePassed.seconds ? timePassed.seconds : 0;\r\n  const milliseconds = timePassed.milliseconds ? timePassed.milliseconds : 0;\r\n  return (\r\n    86400000 -\r\n    Math.round((hours * 3600 + minutes * 60 + seconds) * 1000 + milliseconds)\r\n  );\r\n};\r\n\r\nexport default function CustomerRides() {\r\n  const classes = useStyles();\r\n  const [rides, setRides] = useState([]);\r\n  const [validpass, setValidpass] = useState(true);\r\n  const timePassed = useRef({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"ride/all-customer\", {\r\n        customer_id: localStorage.getItem(\"user_id\"),\r\n      })\r\n      .then((res) => {\r\n        if (res.data !== \"You have an unexpired entry pass\") {\r\n          timePassed.current = calcSecond(res.data.time_left);\r\n          setRides(res.data.rides);\r\n        } else {\r\n          setValidpass(false);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const [info, setInfo] = React.useState({});\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const dialogHandleClickOpen = () => {\r\n    setOpenDialog(true);\r\n  };\r\n  const dialogHandleClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const visit = (ride_id) => {\r\n    const data = {\r\n      ride_id,\r\n      customer_id: Number(localStorage.getItem(\"user_id\")),\r\n    };\r\n\r\n    axios\r\n      .post(\"ride/ride\", data)\r\n      .then((res) => {\r\n        handleClick();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.cardGrid}>\r\n      <CssBaseline />\r\n      {rides.length !== 0 ? <CustomerTimer time={timePassed.current} /> : null}\r\n      <Grid container spacing={4}>\r\n        {!validpass ? (\r\n          <PassNeeded type={\"rides\"} />\r\n        ) : (\r\n          rides.map((ride) => (\r\n            <Grid item key={ride.ride_id} md={3}>\r\n              <Card className={classes.card}>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={ride.picture}\r\n                  title=\"Image title\"\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography variant=\"h5\">\r\n                    {ride.name}\r\n                    {ride.broken ? (\r\n                      <Tooltip title=\"broken\">\r\n                        <BrokenImageIcon color=\"disabled\" />\r\n                      </Tooltip>\r\n                    ) : null}\r\n                    {ride.rainedout ? (\r\n                      <Tooltip title=\"rained out\">\r\n                        <OpacityIcon color=\"disabled\" />\r\n                      </Tooltip>\r\n                    ) : null}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.buttons}>\r\n                  {ride.rainedout || ride.broken ? (\r\n                    <Button color=\"primary\" variant=\"contained\" disabled>\r\n                      Ride!\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => visit(ride.ride_id)}\r\n                    >\r\n                      Ride!\r\n                    </Button>\r\n                  )}\r\n                  <Tooltip\r\n                    title={\r\n                      <React.Fragment>\r\n                        <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                          Description\r\n                        </Typography>\r\n                        <div className={classes.paragraph}>\r\n                          {ride.description}\r\n                        </div>\r\n                        <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                          Location\r\n                        </Typography>\r\n                        <div className={classes.paragraph}>{ride.location}</div>\r\n                        <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                          Age Restriciton\r\n                        </Typography>\r\n                        <div className={classes.paragraph}>\r\n                          {ride.age_restriction ? ride.age_restriction : \"None\"}\r\n                        </div>\r\n                        <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                          Height Resctriction\r\n                        </Typography>\r\n                        <div className={classes.paragraph}>\r\n                          {ride.height_restriction\r\n                            ? `${Math.round(ride.height_restriction / 12)}' ${\r\n                                ride.height_restriction % 12\r\n                              }''`\r\n                            : \"None\"}\r\n                        </div>\r\n                      </React.Fragment>\r\n                    }\r\n                  >\r\n                    <Button variant=\"outlined\">Info</Button>\r\n                  </Tooltip>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        )}\r\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            Wheee! enjoying the fun ride\r\n          </Alert>\r\n        </Snackbar>\r\n        <Dialog\r\n          open={openDialog}\r\n          TransitionComponent={Transition}\r\n          onClose={dialogHandleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">(ride.name)</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>(ride.description)</DialogContentText>\r\n            <DialogContentText>Location</DialogContentText>\r\n            <DialogContentText>(ride.location)</DialogContentText>\r\n            <DialogContentText>Age Restriction</DialogContentText>\r\n            <DialogContentText>(ride.age_restriction)</DialogContentText>\r\n            <DialogContentText>Height Restriction</DialogContentText>\r\n            <DialogContentText>ride.height_restriction</DialogContentText>\r\n            <DialogContentText></DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={dialogHandleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport PassNeeded from \"./PassNeeded\";\r\nimport OpacityIcon from \"@material-ui/icons/Opacity\";\r\nimport CustomerTimer from \"./CustomerTimer\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardTitle: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    justifyContent: \"center\",\r\n  },\r\n  buttons: {\r\n    paddingTop: 0,\r\n  },\r\n  paragraph: {\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\nconst calcSecond = (timePassed) => {\r\n  const hours = timePassed.hours ? timePassed.hours : 0;\r\n  const minutes = timePassed.minutes ? timePassed.minutes : 0;\r\n  const seconds = timePassed.seconds ? timePassed.seconds : 0;\r\n  const milliseconds = timePassed.milliseconds ? timePassed.milliseconds : 0;\r\n  return (\r\n    86400000 -\r\n    Math.round((hours * 3600 + minutes * 60 + seconds) * 1000 + milliseconds)\r\n  );\r\n};\r\n\r\nexport default function CustomerAttractions() {\r\n  const classes = useStyles();\r\n  const [attractions, setAttractions] = useState([]);\r\n  const [validpass, setValidpass] = useState(true);\r\n  const timePassed = useRef({});\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"attraction/all-customer\", {\r\n        customer_id: localStorage.getItem(\"user_id\"),\r\n      })\r\n      .then((res) => {\r\n        if (res.data !== \"You have an unexpired entry pass\") {\r\n          timePassed.current = calcSecond(res.data.time_left);\r\n\r\n          setAttractions(res.data.attractions);\r\n        } else {\r\n          setValidpass(false);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const visit = (attraction) => {\r\n    const data = {\r\n      attraction_id: attraction.attraction_id,\r\n      customer_id: Number(localStorage.getItem(\"user_id\")),\r\n    };\r\n    axios\r\n      .post(\"attraction/visit\", data)\r\n      .then((res) => {\r\n        handleClick();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.cardGrid}>\r\n      <CssBaseline />\r\n      {attractions.length !== 0 ? (\r\n        <CustomerTimer time={timePassed.current} />\r\n      ) : null}\r\n\r\n      <Grid container spacing={4}>\r\n        {!validpass ? (\r\n          <PassNeeded type={\"attractions\"} />\r\n        ) : (\r\n          attractions.map((attraction) => (\r\n            <Grid item key={attraction.attraction_id} md={3}>\r\n              <Card className={classes.card}>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={attraction.picture}\r\n                  title=\"Image title\"\r\n                />\r\n                <CardContent className={classes.cardContent}>\r\n                  <Typography variant=\"h5\">\r\n                    {attraction.name}{\" \"}\r\n                    {attraction.rainedout ? (\r\n                      <Tooltip title=\"rained out\">\r\n                        <OpacityIcon color=\"disabled\" />\r\n                      </Tooltip>\r\n                    ) : null}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.buttons}>\r\n                  {attraction.rainedout ? (\r\n                    <Button disabled color=\"primary\" variant=\"contained\">\r\n                      Visit!\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => visit(attraction)}\r\n                    >\r\n                      Visit!\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Tooltip\r\n                    title={\r\n                      <React.Fragment>\r\n                        <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                          Description\r\n                        </Typography>\r\n                        <div className={classes.paragraph}>\r\n                          {attraction.description}\r\n                        </div>\r\n                        <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                          Location\r\n                        </Typography>\r\n                        <div className={classes.paragraph}>\r\n                          {attraction.location}\r\n                        </div>\r\n                        <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                          Age Restriciton\r\n                        </Typography>\r\n                        <div className={classes.paragraph}>\r\n                          {attraction.age_restriction\r\n                            ? attraction.age_restriction\r\n                            : \"None\"}\r\n                        </div>\r\n                      </React.Fragment>\r\n                    }\r\n                  >\r\n                    <Button variant=\"outlined\">Info</Button>\r\n                  </Tooltip>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        )}\r\n        <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"success\">\r\n            Whaaa! having fun at the attraction\r\n          </Alert>\r\n        </Snackbar>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch, Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport TrainIcon from \"@material-ui/icons/Train\";\r\nimport ConfirmationNumberIcon from \"@material-ui/icons/ConfirmationNumber\";\r\nimport CustomerPass from \"./CustomerPass\";\r\nimport CustomerRides from \"./CustomerRides\";\r\nimport CustomerAttractions from \"./CustomerAttractions\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nexport default function CustomerDashboard() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let { url, path } = useRouteMatch();\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    setTimeout(1000, history.push(\"/\"));\r\n  };\r\n\r\n  const options = [\r\n    { text: \"Entry Pass\", url: `${url}`, icon: <ConfirmationNumberIcon /> },\r\n    { text: \"Rides\", url: `${url}/rides`, icon: <TrainIcon /> },\r\n    { text: \"Attractions\", url: `${url}/attractions`, icon: <StoreIcon /> },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {localStorage.getItem(\"user_name\")}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {options.map((item, index) => (\r\n              <Link to={item.url} key={index} className={classes.link}>\r\n                <ListItem>\r\n                  <ListItemIcon>{item.icon}</ListItemIcon>\r\n                  <ListItemText primary={item.text} />\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem onClick={logout}>\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Logout\"} />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        <Switch>\r\n          <Route path={`${path}`} component={CustomerPass} exact />\r\n          <Route path={`${path}/rides`} component={CustomerRides} />\r\n          <Route path={`${path}/attractions`} component={CustomerAttractions} />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Bar } from \"@reactchartjs/react-chart.js\";\r\n\r\nconst data = {\r\n  labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\r\n  datasets: [\r\n    {\r\n      label: \"# of Red Votes\",\r\n      data: [12, 19, 3, 5, 2, 3],\r\n      backgroundColor: \"rgb(255, 99, 132)\",\r\n    },\r\n    {\r\n      label: \"# of Blue Votes\",\r\n      data: [2, 3],\r\n      backgroundColor: \"rgb(54, 162, 235)\",\r\n    },\r\n    {\r\n      label: \"# of Green Votes\",\r\n      data: [3, 10, 13, 15, 22, 30],\r\n      backgroundColor: \"rgb(75, 192, 192)\",\r\n    },\r\n    {\r\n      label: \"#1\",\r\n      data: [3, 10, 13, 15, 22, 30],\r\n      backgroundColor: \"Black\",\r\n    },\r\n    {\r\n      label: \"#2\",\r\n      data: [3, 10, 13, 15, 22, 30],\r\n      backgroundColor: \"Black\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n};\r\n\r\nconst GroupedBar = () => (\r\n  <>\r\n    <div style={{ minHeight: 475 }}>\r\n      <Bar data={data} options={options} />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default GroupedBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#3f50b5\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: \"#e8eaf6\",\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 455,\r\n  },\r\n});\r\n\r\nconst getLable = (type, calculate) => {\r\n  const cfl = type.charAt(0).toUpperCase() + type.slice(1);\r\n\r\n  const lable = {\r\n    \"daily total\": `Daily Total ${cfl}`,\r\n    \"monthly total\": `Monthly Total ${cfl}`,\r\n    \"daily average by month\": `Daily Average ${cfl} by Month`,\r\n    \"daily max by month\": `Daily Maximum ${cfl} by Month`,\r\n    \"daily min by month\": `Daily Minimum ${cfl} by Month`,\r\n  };\r\n\r\n  return lable[calculate];\r\n};\r\n\r\nconst getName = (type, id, ridePairs, attractionPairs) => {\r\n  if (id === undefined) {\r\n    return \"None\";\r\n  } else if (type === \"ride\") {\r\n    return ridePairs[id];\r\n  } else {\r\n    return attractionPairs[id];\r\n  }\r\n};\r\n\r\nconst getTable = (params, report, ridePairs, attractionPairs) => {\r\n  let rows = [];\r\n  let columns = [];\r\n\r\n  // raw data from backend\r\n  // console.log(params, report);\r\n\r\n  // 1st report\r\n  if (params.reportType === \"visits\") {\r\n    if (params.calculate === \"daily total\") {\r\n      rows = report.map((row) => ({\r\n        visits: row.visits,\r\n        date: `${row.month}/${row.day}/${row.year}`,\r\n      }));\r\n      columns = [\r\n        { id: \"visits\", label: getLable(params.reportType, params.calculate) },\r\n        { id: \"date\", label: \"Date\" },\r\n      ];\r\n    } else {\r\n      rows = report.map((row) => ({\r\n        visits:\r\n          params.calculate === \"daily average by month\"\r\n            ? Math.round(row.visits)\r\n            : row.visits,\r\n        date: `${row.month}/${row.year}`,\r\n      }));\r\n      columns = [\r\n        { id: \"visits\", label: getLable(params.reportType, params.calculate) },\r\n        { id: \"date\", label: \"Month\" },\r\n      ];\r\n    }\r\n  } // 2nd report\r\n  else if (params.reportType === \"usage\") {\r\n    const grab = params.type === \"ride\" ? \"usage\" : \"visit\";\r\n    const id = params.type === \"ride\" ? params.ride_id : params.attraction_id;\r\n    const name = getName(params.type, id, ridePairs, attractionPairs);\r\n\r\n    if (params.calculate === \"daily total\") {\r\n      rows = report.map((row) => ({\r\n        name: params.show === \"all\" ? row.name : name,\r\n        usage: row[grab],\r\n        date: `${row.month}/${row.day}/${row.year}`,\r\n      }));\r\n      columns = [\r\n        { id: \"name\", label: \"Name\" },\r\n        { id: \"usage\", label: getLable(params.reportType, params.calculate) },\r\n        { id: \"date\", label: \"Date\" },\r\n      ];\r\n    } else {\r\n      rows = report.map((row) => ({\r\n        name: params.show === \"all\" ? row.name : name,\r\n        usage:\r\n          params.calculate === \"daily average by month\"\r\n            ? Math.round(row[grab])\r\n            : row[grab],\r\n        date: `${row.month}/${row.year}`,\r\n      }));\r\n      columns = [\r\n        { id: \"name\", label: \"Name\" },\r\n        { id: \"usage\", label: getLable(params.reportType, params.calculate) },\r\n        { id: \"date\", label: \"Month\" },\r\n      ];\r\n    }\r\n  } // 3rd report\r\n  else if (params.reportType === \"breakdowns\") {\r\n    const name = getName(\"ride\", params.ride_id, ridePairs, attractionPairs);\r\n\r\n    if (params.calculate === \"daily total\") {\r\n      rows = report.map((row) => ({\r\n        name: params.show === \"all\" ? row.name : name,\r\n        breakdowns: row.breakdowns,\r\n        date: `${row.month}/${row.day}/${row.year}`,\r\n      }));\r\n      columns = [\r\n        { id: \"name\", label: \"Name\" },\r\n        {\r\n          id: \"breakdowns\",\r\n          label: getLable(params.reportType, params.calculate),\r\n        },\r\n        { id: \"date\", label: \"Date\" },\r\n      ];\r\n    } else {\r\n      rows = report.map((row) => ({\r\n        name: params.show === \"all\" ? row.name : name,\r\n        breakdowns:\r\n          params.calculate === \"daily average by month\"\r\n            ? Math.round(row.breakdowns)\r\n            : row.breakdowns,\r\n        date: `${row.month}/${row.year}`,\r\n      }));\r\n      columns = [\r\n        { id: \"name\", label: \"Name\" },\r\n        {\r\n          id: \"breakdowns\",\r\n          label: getLable(params.reportType, params.calculate),\r\n        },\r\n        { id: \"date\", label: \"Month\" },\r\n      ];\r\n    }\r\n  } else if (params.reportType === \"rainouts\") {\r\n    const id = params.type === \"ride\" ? params.ride_id : params.attraction_id;\r\n    const name = getName(params.type, id, ridePairs, attractionPairs);\r\n\r\n    if (params.calculate === \"daily total\") {\r\n      rows = report.map((row) => ({\r\n        name: params.show === \"all\" ? row.name : name,\r\n        rainouts: row.rainouts,\r\n        date: `${row.month}/${row.day}/${row.year}`,\r\n      }));\r\n      columns = [\r\n        { id: \"name\", label: \"Name\" },\r\n        {\r\n          id: \"rainouts\",\r\n          label: getLable(params.reportType, params.calculate),\r\n        },\r\n        { id: \"date\", label: \"Date\" },\r\n      ];\r\n    } else {\r\n      rows = report.map((row) => ({\r\n        name: params.show === \"all\" ? row.name : name,\r\n        rainouts:\r\n          params.calculate === \"daily average by month\"\r\n            ? Math.round(row.rainouts)\r\n            : row.rainouts,\r\n        date: `${row.month}/${row.year}`,\r\n      }));\r\n      columns = [\r\n        { id: \"name\", label: \"Name\" },\r\n        {\r\n          id: \"rainouts\",\r\n          label: getLable(params.reportType, params.calculate),\r\n        },\r\n        { id: \"date\", label: \"Month\" },\r\n      ];\r\n    }\r\n  }\r\n\r\n  return { rows, columns };\r\n};\r\n\r\nexport default function ManagerTable(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(25);\r\n  const [table, setTable] = useState();\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  //data\r\n  useEffect(() => {\r\n    const { params, report, ridePairs, attractionPairs } = props;\r\n    const parsedTable = getTable(params, report, ridePairs, attractionPairs);\r\n    console.log(parsedTable);\r\n    setTable(parsedTable);\r\n    props.setExcelData(parsedTable);\r\n  }, [props]);\r\n\r\n  return (\r\n    <>\r\n      {table ? (\r\n        <Paper className={classes.root}>\r\n          <TableContainer className={classes.container}>\r\n            <Table stickyHeader aria-label=\"sticky table\" size=\"small\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {table.columns.map((column) => (\r\n                    <StyledTableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </StyledTableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {table.rows\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <StyledTableRow\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.code}\r\n                      >\r\n                        {table.columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id} align={column.align}>\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </StyledTableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[25, 100]}\r\n            component=\"div\"\r\n            count={table.rows.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button, Switch } from \"@material-ui/core\";\r\nimport ManagerChart from \"./ManagerChart\";\r\nimport axios from \"axios\";\r\nimport ManagerTable from \"./ManagerTable\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 150,\r\n    maxWidth: 150,\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\n\r\nexport default function AdminReport() {\r\n  const classes = useStyles();\r\n  //menu\r\n  const [reportType, setReportType] = useState(\"visits\");\r\n  const [start_date, setStartDate] = useState(\"\");\r\n  const [end_date, setEndDate] = useState(\"\");\r\n  const [calculate, setCalculate] = useState(\"daily total\");\r\n  const [show, setShow] = useState(\"all\"); // one or all\r\n  const [type, setType] = useState(\"ride\"); //ride or attraction query\r\n  const [rides, setRides] = useState([]);\r\n  const [attractions, setAttractions] = useState([]);\r\n  const [ride_id, setRide_id] = useState(1);\r\n  const [attraction_id, setAttraction_id] = useState(1);\r\n  const [ridePairs, setRidePairs] = useState();\r\n  const [attractionPairs, setAttractionPairs] = useState();\r\n\r\n  //checkbox\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleChangeCheck = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  //snackbar\r\n  const [open, setOpen] = useState(false);\r\n  const [snackMsg, setSnackMsg] = useState(\"\");\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  //report\r\n  const [report, setReport] = useState();\r\n  const [params, setParams] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [excelData, setExcelData] = useState();\r\n\r\n  const generateReport = () => {\r\n    if (!start_date || !end_date) {\r\n      setSnackMsg(\"Please pick a date range to generate report\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n\r\n    if (start_date > end_date) {\r\n      setSnackMsg(\"End date can not come before start date\");\r\n      setOpen(true);\r\n      return;\r\n    }\r\n    setLoading(true);\r\n\r\n    let query = {};\r\n\r\n    if (reportType === \"visits\") {\r\n      query = { start_date, end_date, calculate };\r\n    } else if (reportType === \"breakdowns\") {\r\n      if (show === \"all\") {\r\n        query = { start_date, end_date, calculate, show };\r\n      } else {\r\n        query = { start_date, end_date, calculate, show, ride_id };\r\n      }\r\n    } else {\r\n      if (show === \"all\") {\r\n        query = { start_date, end_date, calculate, show, type };\r\n      } else {\r\n        query =\r\n          type === \"ride\"\r\n            ? { start_date, end_date, calculate, show, type, ride_id }\r\n            : { start_date, end_date, calculate, show, type, attraction_id };\r\n      }\r\n    }\r\n\r\n    axios\r\n      .post(`manager/${reportType}`, query)\r\n      .then((res) => {\r\n        setReport(res.data);\r\n        setParams({ reportType: reportType, ...query });\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setSnackMsg(\r\n          \"Error occured while generating the report for this criteria\"\r\n        );\r\n        setOpen(true);\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"ride/all\")\r\n      .then((res) => {\r\n        const pairs = res.data.reduce((acc, ride) => {\r\n          acc[ride.ride_id] = ride.name;\r\n          return acc;\r\n        }, {});\r\n        setRidePairs(pairs);\r\n        setRides(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n    axios\r\n      .get(\"attraction/all\")\r\n      .then((res) => {\r\n        const pairs = res.data.reduce((acc, attraction) => {\r\n          acc[attraction.attraction_id] = attraction.name;\r\n          return acc;\r\n        }, {});\r\n        setAttractionPairs(pairs);\r\n        setAttractions(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={1}>\r\n        <div>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            onClick={() => generateReport()}\r\n          >\r\n            Generate Report\r\n          </Button>\r\n          {report ? (\r\n            <>\r\n              {excelData ? (\r\n                <ExcelFile\r\n                  element={\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      style={{ marginLeft: 20 }}\r\n                      size=\"medium\"\r\n                    >\r\n                      Download Excel\r\n                    </Button>\r\n                  }\r\n                >\r\n                  <ExcelSheet data={excelData.rows} name={reportType}>\r\n                    {excelData.columns.map((col) => (\r\n                      <ExcelColumn label={col.label} value={col.id} />\r\n                    ))}\r\n                  </ExcelSheet>\r\n                </ExcelFile>\r\n              ) : null}\r\n              {/* <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={checked}\r\n                    onChange={handleChangeCheck}\r\n                    color=\"primary\"\r\n                    style={{ marginLeft: 20 }}\r\n                  />\r\n                }\r\n                label=\"Show Graph\"\r\n              /> */}\r\n            </>\r\n          ) : null}\r\n        </div>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>Report Type</InputLabel>\r\n              <Select\r\n                value={reportType}\r\n                onChange={(event) => {\r\n                  if (event.target.value === \"breakdowns\") {\r\n                    setType(\"ride\");\r\n                    setReportType(event.target.value);\r\n                  } else {\r\n                    setReportType(event.target.value);\r\n                  }\r\n                }}\r\n              >\r\n                <MenuItem value={\"visits\"}>Visits</MenuItem>\r\n                <MenuItem value={\"usage\"}>Usage</MenuItem>\r\n                <MenuItem value={\"breakdowns\"}>Breakdowns</MenuItem>\r\n                <MenuItem value={\"rainouts\"}>Rainouts</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                id=\"start_date\"\r\n                label=\"Start date\"\r\n                type=\"date\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                value={start_date}\r\n                onChange={(event) => setStartDate(event.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                id=\"end_date\"\r\n                label=\"End date\"\r\n                type=\"date\"\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                value={end_date}\r\n                onChange={(event) => setEndDate(event.target.value)}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel>Calculate</InputLabel>\r\n              <Select\r\n                value={calculate}\r\n                defaultValue={1}\r\n                onChange={(event) => setCalculate(event.target.value)}\r\n              >\r\n                <MenuItem value={\"daily total\"}>Daily Total</MenuItem>\r\n                <MenuItem value={\"monthly total\"}>Monthly Total</MenuItem>\r\n                <MenuItem value={\"daily average by month\"}>\r\n                  Daily Average by Month\r\n                </MenuItem>\r\n                <MenuItem value={\"daily max by month\"}>\r\n                  Daily Maximum by Month\r\n                </MenuItem>\r\n                <MenuItem value={\"daily min by month\"}>\r\n                  Daily Minimum by Month\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            {reportType !== \"visits\" ? (\r\n              <>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel>Show</InputLabel>\r\n                  <Select\r\n                    value={show}\r\n                    onChange={(event) => setShow(event.target.value)}\r\n                  >\r\n                    {\" \"}\r\n                    <MenuItem value={\"all\"}>All</MenuItem>\r\n                    <MenuItem value={\"one\"}>One</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel>Type</InputLabel>\r\n                  <Select\r\n                    value={type}\r\n                    onChange={(event) => setType(event.target.value)}\r\n                  >\r\n                    <MenuItem value={\"ride\"}>Ride</MenuItem>\r\n                    {reportType !== \"breakdowns\" ? (\r\n                      <MenuItem value={\"attraction\"}>Attraction</MenuItem>\r\n                    ) : null}\r\n                  </Select>\r\n                </FormControl>\r\n                {show === \"one\" ? (\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel>Name</InputLabel>\r\n                    {type === \"ride\" ? (\r\n                      <Select\r\n                        value={ride_id}\r\n                        onChange={(event) => setRide_id(event.target.value)}\r\n                      >\r\n                        {rides.map((ride) => (\r\n                          <MenuItem value={ride.ride_id} key={ride.ride_id}>\r\n                            {ride.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    ) : (\r\n                      <Select\r\n                        value={attraction_id}\r\n                        onChange={(event) =>\r\n                          setAttraction_id(event.target.value)\r\n                        }\r\n                      >\r\n                        {attractions.map((attraction) => (\r\n                          <MenuItem\r\n                            value={attraction.attraction_id}\r\n                            key={attraction.attraction_id}\r\n                          >\r\n                            {attraction.name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    )}\r\n                  </FormControl>\r\n                ) : null}\r\n              </>\r\n            ) : null}\r\n          </Paper>\r\n        </Grid>\r\n        {loading ? (\r\n          <Grid item xs={12}>\r\n            <LinearProgress />\r\n          </Grid>\r\n        ) : null}\r\n\r\n        {report && !loading ? (\r\n          <>\r\n            <Grid item xs={checked ? 7 : 12}>\r\n              <ManagerTable\r\n                report={report}\r\n                params={params}\r\n                ridePairs={ridePairs}\r\n                attractionPairs={attractionPairs}\r\n                setExcelData={setExcelData}\r\n              />\r\n            </Grid>\r\n            {checked ? (\r\n              <Grid item xs={5}>\r\n                <Paper className={classes.paper}>\r\n                  <ManagerChart report={report} params={params} />\r\n                </Paper>\r\n              </Grid>\r\n            ) : null}\r\n          </>\r\n        ) : null}\r\n      </Grid>\r\n      <Snackbar open={open} autoHideDuration={2500} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {snackMsg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport BrokenImageIcon from \"@material-ui/icons/BrokenImage\";\r\nimport OpacityIcon from \"@material-ui/icons/Opacity\";\r\nimport { useRouteMatch, Link } from \"react-router-dom\";\r\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport UnarchiveIcon from \"@material-ui/icons/Unarchive\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardTitle: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    justifyContent: \"center\",\r\n  },\r\n  buttons: {\r\n    paddingTop: 0,\r\n  },\r\n  paragraph: {\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\nexport default function ManagerRides() {\r\n  const classes = useStyles();\r\n  let { url, path } = useRouteMatch();\r\n  const [rides, setRides] = useState([]);\r\n  const [unassinged, setUnassinged] = useState([]);\r\n  const [attendant, setAttendant] = useState({});\r\n  const [ridePicked, setRidePicked] = useState({});\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [snackMsg, setSnackMsg] = useState(\"\");\r\n\r\n  const handleCloseSnack = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnack(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setAttendant(event.target.value);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = async (ride) => {\r\n    setRidePicked(ride);\r\n    const unassingedAttendants = await axios\r\n      .get(\"manager/unassinged-attendants\")\r\n      .then((res) => res.data)\r\n      .catch((err) => console.log(err));\r\n    setUnassinged(unassingedAttendants);\r\n\r\n    if (ride.attendant_id) {\r\n      const currentAttendant = await axios\r\n        .post(\"manager/get-one-attendant\", { attendant_id: ride.attendant_id })\r\n        .then((res) => res.data)\r\n        .catch((err) => console.log(err));\r\n      setAttendant(currentAttendant);\r\n    } else {\r\n      setAttendant({});\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const assign = () => {\r\n    if (\r\n      ridePicked.attendant_id !== attendant.account_id &&\r\n      attendant.account_id != null\r\n    ) {\r\n      axios\r\n        .post(\"manager/new-assignment\", {\r\n          assignment_type: \"ride\",\r\n          attendant_id: attendant.account_id,\r\n          ride_id: ridePicked.ride_id,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          const newRide = res.data;\r\n          setRides(\r\n            rides.map((ride) =>\r\n              ride.ride_id === newRide.ride_id ? newRide : ride\r\n            )\r\n          );\r\n          setSnackMsg(\"Attendant successfully assigned!\");\r\n          setOpenSnack(true);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const unassgin = (ride) => {\r\n    console.log({\r\n      assignment_type: \"ride\",\r\n      attendant_id: ride.attendant_id,\r\n      ride_id: ride.ride_id,\r\n    });\r\n    axios\r\n      .delete(\"manager/remove-assignment\", {\r\n        data: {\r\n          assignment_type: \"ride\",\r\n          attendant_id: ride.attendant_id,\r\n          ride_id: ride.ride_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const newRide = res.data;\r\n        setRides(\r\n          rides.map((ride) =>\r\n            ride.ride_id === newRide.ride_id ? newRide : ride\r\n          )\r\n        );\r\n        setSnackMsg(\"Attendant successfully removed!\");\r\n        setOpenSnack(true);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const setArchive = (config) => {\r\n    axios\r\n      .put(\"manager/ride-archive\", config)\r\n      .then((res) => {\r\n        setRides(\r\n          rides.map((ride) =>\r\n            ride.ride_id === config.ride_id\r\n              ? { ...ride, archived: config.archive }\r\n              : ride\r\n          )\r\n        );\r\n        if (config.archive) {\r\n          setSnackMsg(\"Ride successfully archived!\");\r\n          setOpenSnack(true);\r\n        } else {\r\n          setSnackMsg(\"Ride successfully unarchived!\");\r\n          setOpenSnack(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"ride/all\")\r\n      .then((res) => {\r\n        setRides(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  console.log(rides);\r\n\r\n  return (\r\n    <Container className={classes.cardGrid}>\r\n      <CssBaseline />\r\n      <Link to={`${url}/add-ride`} style={{ textDecoration: \"none\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ paddingLeft: 13, marginBottom: 10 }}\r\n        >\r\n          <AddCircleIcon style={{ marginRight: 5 }} />\r\n          Add New\r\n        </Button>\r\n      </Link>\r\n      <Grid container spacing={4}>\r\n        {rides.map((ride) => (\r\n          <Grid item key={ride.ride_id} md={3}>\r\n            <Card className={classes.card}>\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image={\r\n                  ride.picture\r\n                    ? ride.picture\r\n                    : \"http://100.26.17.215:5000/default-coverImage.png\"\r\n                }\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography variant=\"h5\">\r\n                  {ride.name}\r\n                  {ride.broken ? (\r\n                    <Tooltip title=\"broken\">\r\n                      <BrokenImageIcon color=\"disabled\" />\r\n                    </Tooltip>\r\n                  ) : null}\r\n                  {ride.rainedout ? (\r\n                    <Tooltip title=\"rained out\">\r\n                      <OpacityIcon color=\"disabled\" />\r\n                    </Tooltip>\r\n                  ) : null}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions className={classes.buttons}>\r\n                {ride.attendant_id ? (\r\n                  <div>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => unassgin(ride)}\r\n                      title={`Assigned to ${ride.first_name} ${ride.last_name}`}\r\n                    >\r\n                      Unassign\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => handleClickOpen(ride)}\r\n                  >\r\n                    Assign\r\n                  </Button>\r\n                )}\r\n\r\n                <Link\r\n                  to={`${url}/info-ride/${ride.ride_id}`}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <Button variant=\"contained\" style={{ paddingLeft: 13 }}>\r\n                    Info\r\n                  </Button>\r\n                </Link>\r\n\r\n                {ride.archived ? (\r\n                  <Button\r\n                    title=\"Unarchive\"\r\n                    variant=\"contained\"\r\n                    onClick={() =>\r\n                      setArchive({ ride_id: ride.ride_id, archive: false })\r\n                    }\r\n                  >\r\n                    <UnarchiveIcon />\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    title=\"Archive\"\r\n                    variant=\"contained\"\r\n                    onClick={() =>\r\n                      setArchive({ ride_id: ride.ride_id, archive: true })\r\n                    }\r\n                  >\r\n                    <DeleteIcon />\r\n                  </Button>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n        <div>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogContent>\r\n              <FormControl className={classes.formControl} fullWidth>\r\n                <InputLabel>Attendant</InputLabel>\r\n                {console.log()}\r\n                <Select\r\n                  value={attendant.account_id ? attendant : \"\"}\r\n                  onChange={handleChange}\r\n                >\r\n                  {attendant.account_id ? (\r\n                    <MenuItem value={attendant}>\r\n                      {attendant.first_name + \" \" + attendant.last_name}\r\n                    </MenuItem>\r\n                  ) : null}\r\n                  {unassinged.map((attendant) => (\r\n                    <MenuItem value={attendant} key={attendant.account_id}>\r\n                      {/* {console.log(attendant.account_id)} */}\r\n                      {attendant.first_name + \" \" + attendant.last_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => assign()} color=\"primary\">\r\n                Confirm\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <Snackbar\r\n          open={openSnack}\r\n          autoHideDuration={2000}\r\n          onClose={handleCloseSnack}\r\n        >\r\n          <Alert onClose={handleCloseSnack} severity=\"success\">\r\n            {snackMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport BrokenImageIcon from \"@material-ui/icons/BrokenImage\";\r\nimport OpacityIcon from \"@material-ui/icons/Opacity\";\r\nimport { useRouteMatch, Link } from \"react-router-dom\";\r\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport UnarchiveIcon from \"@material-ui/icons/Unarchive\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardTitle: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    justifyContent: \"center\",\r\n  },\r\n  buttons: {\r\n    paddingTop: 0,\r\n  },\r\n  paragraph: {\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\nexport default function Managerattractions() {\r\n  const classes = useStyles();\r\n  let { url, path } = useRouteMatch();\r\n  const [attractions, setattractions] = useState([]);\r\n  const [unassinged, setUnassinged] = useState([]);\r\n  const [attendant, setAttendant] = useState({});\r\n  const [attractionPicked, setattractionPicked] = useState({});\r\n  const [openSnack, setOpenSnack] = useState(false);\r\n  const [snackMsg, setSnackMsg] = useState(\"\");\r\n\r\n  const handleCloseSnack = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnack(false);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    setAttendant(event.target.value);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = async (attraction) => {\r\n    setattractionPicked(attraction);\r\n    const unassingedAttendants = await axios\r\n      .get(\"manager/unassinged-attendants\")\r\n      .then((res) => res.data)\r\n      .catch((err) => console.log(err));\r\n    setUnassinged(unassingedAttendants);\r\n\r\n    if (attraction.attendant_id) {\r\n      const currentAttendant = await axios\r\n        .post(\"manager/get-one-attendant\", {\r\n          attendant_id: attraction.attendant_id,\r\n        })\r\n        .then((res) => res.data)\r\n        .catch((err) => console.log(err));\r\n      setAttendant(currentAttendant);\r\n    } else {\r\n      setAttendant({});\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const assign = () => {\r\n    if (\r\n      attractionPicked.attendant_id !== attendant.account_id &&\r\n      attendant.account_id != null\r\n    ) {\r\n      axios\r\n        .post(\"manager/new-assignment\", {\r\n          assignment_type: \"attraction\",\r\n          attendant_id: attendant.account_id,\r\n          attraction_id: attractionPicked.attraction_id,\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          const newattraction = res.data;\r\n          setattractions(\r\n            attractions.map((attraction) =>\r\n              attraction.attraction_id === newattraction.attraction_id\r\n                ? newattraction\r\n                : attraction\r\n            )\r\n          );\r\n          setSnackMsg(\"Attendant successfully assigned!\");\r\n          setOpenSnack(true);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const unassgin = (attraction) => {\r\n    console.log({\r\n      assignment_type: \"attraction\",\r\n      attendant_id: attraction.attendant_id,\r\n      attraction_id: attraction.attraction_id,\r\n    });\r\n    axios\r\n      .delete(\"manager/remove-assignment\", {\r\n        data: {\r\n          assignment_type: \"attraction\",\r\n          attendant_id: attraction.attendant_id,\r\n          attraction_id: attraction.attraction_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const newattraction = res.data;\r\n        setattractions(\r\n          attractions.map((attraction) =>\r\n            attraction.attraction_id === newattraction.attraction_id\r\n              ? newattraction\r\n              : attraction\r\n          )\r\n        );\r\n        setSnackMsg(\"Attendant successfully removed!\");\r\n        setOpenSnack(true);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const setArchive = (config) => {\r\n    axios\r\n      .put(\"manager/attraction-archive\", config)\r\n      .then((res) => {\r\n        setattractions(\r\n          attractions.map((attraction) =>\r\n            attraction.attraction_id === config.attraction_id\r\n              ? { ...attraction, archived: config.archive }\r\n              : attraction\r\n          )\r\n        );\r\n        if (config.archive) {\r\n          setSnackMsg(\"attraction successfully archived!\");\r\n          setOpenSnack(true);\r\n        } else {\r\n          setSnackMsg(\"attraction successfully unarchived!\");\r\n          setOpenSnack(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"attraction/all\")\r\n      .then((res) => {\r\n        setattractions(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  console.log(attractions);\r\n\r\n  return (\r\n    <Container className={classes.cardGrid}>\r\n      <CssBaseline />\r\n      <Link to={`${url}/add-attraction`} style={{ textDecoration: \"none\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ paddingLeft: 13, marginBottom: 10 }}\r\n        >\r\n          <AddCircleIcon style={{ marginRight: 5 }} />\r\n          Add New\r\n        </Button>\r\n      </Link>\r\n      <Grid container spacing={4}>\r\n        {attractions.map((attraction) => (\r\n          <Grid item key={attraction.attraction_id} md={3}>\r\n            <Card className={classes.card}>\r\n              <CardMedia\r\n                className={classes.cardMedia}\r\n                image={\r\n                  attraction.picture\r\n                    ? attraction.picture\r\n                    : \"http://100.26.17.215:5000/default-coverImage.png\"\r\n                }\r\n              />\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography variant=\"h5\">\r\n                  {attraction.name}\r\n                  {attraction.broken ? (\r\n                    <Tooltip title=\"broken\">\r\n                      <BrokenImageIcon color=\"disabled\" />\r\n                    </Tooltip>\r\n                  ) : null}\r\n                  {attraction.rainedout ? (\r\n                    <Tooltip title=\"rained out\">\r\n                      <OpacityIcon color=\"disabled\" />\r\n                    </Tooltip>\r\n                  ) : null}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions className={classes.buttons}>\r\n                {attraction.attendant_id ? (\r\n                  <div>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => unassgin(attraction)}\r\n                      title={`Assigned to ${attraction.first_name} ${attraction.last_name}`}\r\n                    >\r\n                      Unassign\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => handleClickOpen(attraction)}\r\n                  >\r\n                    Assign\r\n                  </Button>\r\n                )}\r\n\r\n                <Link\r\n                  to={`${url}/info-attraction/${attraction.attraction_id}`}\r\n                  style={{ textDecoration: \"none\" }}\r\n                >\r\n                  <Button variant=\"contained\" style={{ paddingLeft: 13 }}>\r\n                    Info\r\n                  </Button>\r\n                </Link>\r\n\r\n                {attraction.archived ? (\r\n                  <Button\r\n                    title=\"Unarchive\"\r\n                    variant=\"contained\"\r\n                    onClick={() =>\r\n                      setArchive({\r\n                        attraction_id: attraction.attraction_id,\r\n                        archive: false,\r\n                      })\r\n                    }\r\n                  >\r\n                    <UnarchiveIcon />\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    title=\"Archive\"\r\n                    variant=\"contained\"\r\n                    onClick={() =>\r\n                      setArchive({\r\n                        attraction_id: attraction.attraction_id,\r\n                        archive: true,\r\n                      })\r\n                    }\r\n                  >\r\n                    <DeleteIcon />\r\n                  </Button>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n        <div>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogContent>\r\n              <FormControl className={classes.formControl} fullWidth>\r\n                <InputLabel>Attendant</InputLabel>\r\n                {console.log()}\r\n                <Select\r\n                  value={attendant.account_id ? attendant : \"\"}\r\n                  onChange={handleChange}\r\n                >\r\n                  {attendant.account_id ? (\r\n                    <MenuItem value={attendant}>\r\n                      {attendant.first_name + \" \" + attendant.last_name}\r\n                    </MenuItem>\r\n                  ) : null}\r\n                  {unassinged.map((attendant) => (\r\n                    <MenuItem value={attendant} key={attendant.account_id}>\r\n                      {/* {console.log(attendant.account_id)} */}\r\n                      {attendant.first_name + \" \" + attendant.last_name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => assign()} color=\"primary\">\r\n                Confirm\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n        <Snackbar\r\n          open={openSnack}\r\n          autoHideDuration={2000}\r\n          onClose={handleCloseSnack}\r\n        >\r\n          <Alert onClose={handleCloseSnack} severity=\"success\">\r\n            {snackMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import Reac, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    margin: \"10px\",\r\n  },\r\n  textField: {\r\n    padding: \"10px\",\r\n    marginTop: \"10px\",\r\n  },\r\n  card: {\r\n    margin: \"0px\",\r\n  },\r\n  cover: {\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function ManagerAddRide() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [editRide, setEditRide] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    age_restriction: 0,\r\n    height_restriction: 0,\r\n    height_restriction_feet: 0,\r\n    height_restriction_inches: 0,\r\n    picture: \"\",\r\n  });\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [editPicture, setEditPicture] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const confirmCreate = () => {\r\n    const sumHeight =\r\n      editRide.height_restriction_feet * 12 +\r\n      editRide.height_restriction_inches;\r\n    const newRide = {\r\n      name: editRide.name,\r\n      description: editRide.description,\r\n      location: editRide.location,\r\n      age_restriction:\r\n        editRide.age_restriction > 0 ? editRide.age_restriction : null,\r\n      height_restriction: sumHeight > 0 ? sumHeight : null,\r\n      picture: editRide.picture,\r\n    };\r\n\r\n    if(newRide.name==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n    if(newRide.description==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n    if(newRide.location==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"manager/ride-create\", newRide)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        history.push(`/dashboard/rides/info-ride/${res.data.ride_id}`);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const uploadPicture = async () => {\r\n    if (editPicture) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", editPicture.picture);\r\n      setLoading(true);\r\n      await axios\r\n        .post(\"manager/upload-image\", formData)\r\n        .then((res) => {\r\n          const name = res.data.path.split(\"/\")[1];\r\n          setEditRide({\r\n            ...editRide,\r\n            picture: `http://100.26.17.215:5000/${name}`,\r\n          });\r\n          setLoading(false);\r\n          handleCloseModal();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper square>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Card className={classes.card} square>\r\n              <div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required\r\n                  label=\"Ride Name\"\r\n                  id=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={editRide.name}\r\n                  onChange={(event) =>\r\n                    setEditRide({ ...editRide, name: event.target.value })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required\r\n                  label=\"Location\"\r\n                  id=\"location\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={editRide.location}\r\n                  onChange={(event) =>\r\n                    setEditRide({ ...editRide, location: event.target.value })\r\n                  }\r\n                />\r\n\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required\r\n                  label=\"Age Restriction\"\r\n                  id=\"age_restriction\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={editRide.age_restriction}\r\n                  onChange={(event) =>\r\n                    setEditRide({\r\n                      ...editRide,\r\n                      age_restriction:\r\n                        event.target.value < 0\r\n                          ? (event.target.value = 0)\r\n                          : Number(event.target.value),\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required\r\n                  label=\"Height Restriction Feet\"\r\n                  id=\"height_restriction_feet\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={editRide.height_restriction_feet}\r\n                  onChange={(event) =>\r\n                    setEditRide({\r\n                      ...editRide,\r\n                      height_restriction_feet:\r\n                        event.target.value < 0\r\n                          ? (event.target.value = 0)\r\n                          : Number(event.target.value),\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required\r\n                  label=\"Height Restriction Inches\"\r\n                  id=\"height_restriction_inches\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={editRide.height_restriction_inches}\r\n                  onChange={(event) =>\r\n                    setEditRide({\r\n                      ...editRide,\r\n                      height_restriction_inches:\r\n                        event.target.value < 0\r\n                          ? (event.target.value = 0)\r\n                          : Number(event.target.value),\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  label=\"Description\"\r\n                  type=\"description\"\r\n                  variant=\"outlined\"\r\n                  rows=\"5\"\r\n                  multiline\r\n                  fullWidth\r\n                  rows={5}\r\n                  required\r\n                  value={editRide.description}\r\n                  onChange={(event) =>\r\n                    setEditRide({\r\n                      ...editRide,\r\n                      description: event.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <CardActions>\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => confirmCreate()}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"disable\"\r\n                    variant=\"contained\"\r\n                    onClick={() => history.push(`/dashboard/rides`)}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </CardActions>\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {editRide.picture === \"\" ? (\r\n              <Card square className={classes.cover}>\r\n                <CardMedia\r\n                  style={{ height: \"100%\" }}\r\n                  image={\"http://100.26.17.215:5000/default-coverImage.png\"}\r\n                  title=\"Add Picture\"\r\n                >\r\n                  <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                    <EditIcon\r\n                      style={{ margin: \"5px\", color: \"black\" }}\r\n                      onClick={() => {\r\n                        setOpenModal(true);\r\n                        setEditPicture(null);\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </CardMedia>\r\n              </Card>\r\n            ) : (\r\n              <Card square className={classes.cover}>\r\n                <CardMedia\r\n                  style={{ height: \"100%\" }}\r\n                  image={editRide.picture}\r\n                  title=\"your assignment\"\r\n                >\r\n                  <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                    <EditIcon\r\n                      style={{ margin: \"5px\", color: \"white\" }}\r\n                      onClick={() => {\r\n                        setOpenModal(true);\r\n                        setEditPicture(null);\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </CardMedia>\r\n              </Card>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Dialog open={openModal} onClose={handleCloseModal}>\r\n        <DialogContent>\r\n          <Grid justify=\"center\">\r\n            {loading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <div>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Select Picture\r\n                </Typography>\r\n                <div style={{ marginBottom: 20 }}>\r\n                  {editPicture !== null ? editPicture.picture.name : null}\r\n                </div>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"label\"\r\n                  label=\"Select Picture\"\r\n                  style={{ margin: 5 }}\r\n                >\r\n                  Select\r\n                  <input\r\n                    label=\"Select Picture\"\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(event) =>\r\n                      setEditPicture({ picture: event.target.files[0] })\r\n                    }\r\n                  />\r\n                </Button>\r\n                <Button\r\n                  onClick={() => uploadPicture()}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  style={{ margin: 5 }}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import Reac, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    margin: \"10px\",\r\n  },\r\n  textField: {\r\n    padding: \"10px\",\r\n    marginTop: \"10px\",\r\n  },\r\n  card: {\r\n    margin: \"0px\",\r\n  },\r\n  cover: {\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function ManagerAddRide() {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  const [ride, setRide] = useState({});\r\n  const [editBool, setEditBool] = useState(false);\r\n  const [editRide, setEditRide] = useState({});\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [editPicture, setEditPicture] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const openEdit = () => {\r\n    const split = {\r\n      ...ride,\r\n      height_restriction_feet: Math.floor(ride.height_restriction / 12),\r\n      height_restriction_inches: ride.height_restriction % 12,\r\n    };\r\n    setEditRide(split);\r\n    setEditBool(true);\r\n  };\r\n\r\n  const confrimEdit = () => {\r\n    const newRide = {\r\n      ride_id: editRide.ride_id,\r\n      name: editRide.name,\r\n      description: editRide.description,\r\n      location: editRide.location,\r\n      age_restriction: editRide.age_restriction,\r\n      height_restriction:\r\n        editRide.height_restriction_feet * 12 +\r\n        editRide.height_restriction_inches,\r\n      picture: editRide.picture,\r\n    };\r\n\r\n    if(newRide.name==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n    if(newRide.description==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n    if(newRide.location==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .put(\"manager/ride-edit\", newRide)\r\n      .then((res) => {\r\n        setRide(newRide);\r\n        setEditBool(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const uploadPicture = async () => {\r\n    if (editPicture) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", editPicture.picture);\r\n      setLoading(true);\r\n      await axios\r\n        .post(\"manager/upload-image\", formData)\r\n        .then((res) => {\r\n          const name = res.data.path.split(\"/\")[1];\r\n          setEditRide({\r\n            ...editRide,\r\n            picture: `http://100.26.17.215:5000/${name}`,\r\n          });\r\n          setLoading(false);\r\n          handleCloseModal();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"ride/all\")\r\n      .then((res) => {\r\n        const currentRide = res.data.find(\r\n          (ride) => ride.ride_id === Number(id)\r\n        );\r\n        if (currentRide.picture) {\r\n          setRide(currentRide);\r\n        } else {\r\n          setRide({\r\n            ...currentRide,\r\n            picture: \"http://100.26.17.215:5000/default-coverImage.png\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Paper square>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Card className={classes.card} square>\r\n              {!editBool ? (\r\n                <div>\r\n                  <div style={{ margin: \"15px\" }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Name</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {ride.name}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Location</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {ride.location}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Height Restriction</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {ride.height_restriction\r\n                        ? `${Math.floor(ride.height_restriction / 12)}' ${\r\n                            ride.height_restriction % 12\r\n                          }'' `\r\n                        : \"None\"}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Age Restriction</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {ride.age_restriction ? ride.age_restriction : \"None\"}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Description</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {ride.description}\r\n                    </Typography>\r\n                  </div>\r\n                  <CardActions>\r\n                    <Button\r\n                      title=\"Edit\"\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => openEdit()}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </CardActions>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    required\r\n                    label=\"Ride Name\"\r\n                    id=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={editRide.name}\r\n                    onChange={(event) =>\r\n                      setEditRide({ ...editRide, name: event.target.value })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    required\r\n                    label=\"Location\"\r\n                    id=\"location\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={editRide.location}\r\n                    onChange={(event) =>\r\n                      setEditRide({ ...editRide, location: event.target.value })\r\n                    }\r\n                  />\r\n\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    required\r\n                    label=\"Age Restriction\"\r\n                    id=\"age_restriction\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={editRide.age_restriction}\r\n                    onChange={(event) =>\r\n                      setEditRide({\r\n                        ...editRide,\r\n                        age_restriction:\r\n                          event.target.value < 0\r\n                            ? (event.target.value = 0)\r\n                            : Number(event.target.value),\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    required\r\n                    label=\"Height Restriction Feet\"\r\n                    id=\"height_restriction_feet\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={editRide.height_restriction_feet}\r\n                    onChange={(event) =>\r\n                      setEditRide({\r\n                        ...editRide,\r\n                        height_restriction_feet:\r\n                          event.target.value < 0\r\n                            ? (event.target.value = 0)\r\n                            : Number(event.target.value),\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    required\r\n                    label=\"Height Restriction Inches\"\r\n                    id=\"height_restriction_inches\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={editRide.height_restriction_inches}\r\n                    onChange={(event) =>\r\n                      setEditRide({\r\n                        ...editRide,\r\n                        height_restriction_inches:\r\n                          event.target.value < 0\r\n                            ? (event.target.value = 0)\r\n                            : Number(event.target.value),\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    label=\"Description\"\r\n                    type=\"description\"\r\n                    variant=\"outlined\"\r\n                    rows=\"5\"\r\n                    multiline\r\n                    fullWidth\r\n                    rows={5}\r\n                    required\r\n                    value={editRide.description}\r\n                    onChange={(event) =>\r\n                      setEditRide({\r\n                        ...editRide,\r\n                        description: event.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <CardActions>\r\n                    <Button\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => confrimEdit()}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small\"\r\n                      color=\"disable\"\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        setLoading(false);\r\n                        setEditRide({});\r\n                        setEditBool(false);\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </CardActions>\r\n                </div>\r\n              )}\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {!editBool ? (\r\n              <Card square className={classes.cover}>\r\n                <CardMedia\r\n                  style={{ height: \"100%\" }}\r\n                  image={ride.picture}\r\n                  title=\"your assignment\"\r\n                />\r\n              </Card>\r\n            ) : (\r\n              <Card square className={classes.cover}>\r\n                <CardMedia\r\n                  style={{ height: \"100%\" }}\r\n                  image={editRide.picture}\r\n                  title=\"ride picture\"\r\n                >\r\n                  <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                    <EditIcon\r\n                      style={{\r\n                        margin: \"5px\",\r\n                        color:\r\n                          editRide.picture ==\r\n                          \"http://100.26.17.215:5000/default-coverImage.png\"\r\n                            ? \"black\"\r\n                            : \"white\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setOpenModal(true);\r\n                        setEditPicture(null);\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </CardMedia>\r\n              </Card>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Dialog open={openModal} onClose={handleCloseModal}>\r\n        <DialogContent>\r\n          <Grid justify=\"center\">\r\n            {loading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <div>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Select Picture\r\n                </Typography>\r\n                <div style={{ marginBottom: 20 }}>\r\n                  {editPicture ? editPicture.picture.name : null}\r\n                </div>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"label\"\r\n                  label=\"Select Picture\"\r\n                  style={{ margin: 5 }}\r\n                >\r\n                  Select\r\n                  <input\r\n                    label=\"Select Picture\"\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(event) =>\r\n                      setEditPicture({ picture: event.target.files[0] })\r\n                    }\r\n                  />\r\n                </Button>\r\n                <Button\r\n                  onClick={() => uploadPicture()}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  style={{ margin: 5 }}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import Reac, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    margin: \"10px\",\r\n  },\r\n  textField: {\r\n    padding: \"10px\",\r\n    marginTop: \"10px\",\r\n  },\r\n  card: {\r\n    margin: \"0px\",\r\n  },\r\n  cover: {\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function ManagerAddattraction() {\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  const [attraction, setattraction] = useState({});\r\n  const [editBool, setEditBool] = useState(false);\r\n  const [editattraction, setEditattraction] = useState({});\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [editPicture, setEditPicture] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const openEdit = () => {\r\n    const split = {\r\n      ...attraction,\r\n    };\r\n    setEditattraction(split);\r\n    setEditBool(true);\r\n  };\r\n\r\n  const confrimEdit = () => {\r\n    const newattraction = {\r\n      attraction_id: editattraction.attraction_id,\r\n      name: editattraction.name,\r\n      description: editattraction.description,\r\n      location: editattraction.location,\r\n      age_restriction: editattraction.age_restriction,\r\n      picture: editattraction.picture,\r\n    };\r\n\r\n    if(newattraction.name==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n    if(newattraction.description==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n    if(newattraction.location==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .put(\"manager/attraction-edit\", newattraction)\r\n      .then((res) => {\r\n        setattraction(newattraction);\r\n        setEditBool(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const uploadPicture = async () => {\r\n    if (editPicture) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", editPicture.picture);\r\n      setLoading(true);\r\n      await axios\r\n        .post(\"manager/upload-image\", formData)\r\n        .then((res) => {\r\n          const name = res.data.path.split(\"/\")[1];\r\n          setEditattraction({\r\n            ...editattraction,\r\n            picture: `http://100.26.17.215:5000/${name}`,\r\n          });\r\n          setLoading(false);\r\n          handleCloseModal();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"attraction/all\")\r\n      .then((res) => {\r\n        const currentattraction = res.data.find(\r\n          (attraction) => attraction.attraction_id === Number(id)\r\n        );\r\n        if (currentattraction.picture) {\r\n          setattraction(currentattraction);\r\n        } else {\r\n          setattraction({\r\n            ...currentattraction,\r\n            picture: \"http://100.26.17.215:5000/default-coverImage.png\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Paper square>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Card className={classes.card} square>\r\n              {!editBool ? (\r\n                <div>\r\n                  <div style={{ margin: \"15px\" }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Name</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {attraction.name}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Location</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {attraction.location}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Age Restriction</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {attraction.age_restriction\r\n                        ? attraction.age_restriction\r\n                        : \"None\"}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      <strong>Description</strong>\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {attraction.description}\r\n                    </Typography>\r\n                  </div>\r\n                  <CardActions>\r\n                    <Button\r\n                      title=\"Edit\"\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => openEdit()}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </CardActions>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    required\r\n                    label=\"attraction Name\"\r\n                    id=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={editattraction.name}\r\n                    onChange={(event) =>\r\n                      setEditattraction({\r\n                        ...editattraction,\r\n                        name: event.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    required\r\n                    label=\"Location\"\r\n                    id=\"location\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={editattraction.location}\r\n                    onChange={(event) =>\r\n                      setEditattraction({\r\n                        ...editattraction,\r\n                        location: event.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    required\r\n                    label=\"Age Restriction\"\r\n                    id=\"age_restriction\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    value={editattraction.age_restriction}\r\n                    onChange={(event) =>\r\n                      setEditattraction({\r\n                        ...editattraction,\r\n                        age_restriction:\r\n                          event.target.value < 0\r\n                            ? (event.target.value = 0)\r\n                            : Number(event.target.value),\r\n                      })\r\n                    }\r\n                  />\r\n                  <TextField\r\n                    className={classes.textField}\r\n                    label=\"Description\"\r\n                    type=\"description\"\r\n                    variant=\"outlined\"\r\n                    rows=\"5\"\r\n                    multiline\r\n                    fullWidth\r\n                    rows={5}\r\n                    required\r\n                    value={editattraction.description}\r\n                    onChange={(event) =>\r\n                      setEditattraction({\r\n                        ...editattraction,\r\n                        description: event.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <CardActions>\r\n                    <Button\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => confrimEdit()}\r\n                    >\r\n                      Confirm\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small\"\r\n                      color=\"disable\"\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        setLoading(false);\r\n                        setEditattraction({});\r\n                        setEditBool(false);\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </CardActions>\r\n                </div>\r\n              )}\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {!editBool ? (\r\n              <Card square className={classes.cover}>\r\n                <CardMedia\r\n                  style={{ height: \"100%\" }}\r\n                  image={attraction.picture}\r\n                  title=\"your assignment\"\r\n                />\r\n              </Card>\r\n            ) : (\r\n              <Card square className={classes.cover}>\r\n                <CardMedia\r\n                  style={{ height: \"100%\" }}\r\n                  image={editattraction.picture}\r\n                  title=\"attraction picture\"\r\n                >\r\n                  <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                    <EditIcon\r\n                      style={{\r\n                        margin: \"5px\",\r\n                        color:\r\n                          editattraction.picture ==\r\n                          \"http://100.26.17.215:5000/default-coverImage.png\"\r\n                            ? \"black\"\r\n                            : \"white\",\r\n                      }}\r\n                      onClick={() => {\r\n                        setOpenModal(true);\r\n                        setEditPicture(null);\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </CardMedia>\r\n              </Card>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Dialog open={openModal} onClose={handleCloseModal}>\r\n        <DialogContent>\r\n          <Grid justify=\"center\">\r\n            {loading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <div>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Select Picture\r\n                </Typography>\r\n                <div style={{ marginBottom: 20 }}>\r\n                  {editPicture ? editPicture.picture.name : null}\r\n                </div>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"label\"\r\n                  label=\"Select Picture\"\r\n                  style={{ margin: 5 }}\r\n                >\r\n                  Select\r\n                  <input\r\n                    label=\"Select Picture\"\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(event) =>\r\n                      setEditPicture({ picture: event.target.files[0] })\r\n                    }\r\n                  />\r\n                </Button>\r\n                <Button\r\n                  onClick={() => uploadPicture()}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  style={{ margin: 5 }}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import Reac, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  input: {\r\n    margin: \"10px\",\r\n  },\r\n  textField: {\r\n    padding: \"10px\",\r\n    marginTop: \"10px\",\r\n  },\r\n  card: {\r\n    margin: \"0px\",\r\n  },\r\n  cover: {\r\n    height: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function ManagerAddattraction() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [editattraction, setEditattraction] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    age_restriction: 0,\r\n    picture: \"\",\r\n  });\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [editPicture, setEditPicture] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const confirmCreate = () => {\r\n    const newattraction = {\r\n      name: editattraction.name,\r\n      description: editattraction.description,\r\n      location: editattraction.location,\r\n      age_restriction:\r\n        editattraction.age_restriction > 0\r\n          ? editattraction.age_restriction\r\n          : null,\r\n      picture: editattraction.picture,\r\n    };\r\n\r\n    if(newattraction.name==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n    if(newattraction.description==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n    if(newattraction.location==\"\")\r\n    {\r\n      console.log(\"name is empty\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"manager/attraction-create\", newattraction)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        history.push(\r\n          `/dashboard/attractions/info-attraction/${res.data.attraction_id}`\r\n        );\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const uploadPicture = async () => {\r\n    if (editPicture) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", editPicture.picture);\r\n      setLoading(true);\r\n      await axios\r\n        .post(\"manager/upload-image\", formData)\r\n        .then((res) => {\r\n          const name = res.data.path.split(\"/\")[1];\r\n          setEditattraction({\r\n            ...editattraction,\r\n            picture: `http://100.26.17.215:5000/${name}`,\r\n          });\r\n          setLoading(false);\r\n          handleCloseModal();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Paper square>\r\n        <Grid container>\r\n          <Grid item xs={6}>\r\n            <Card className={classes.card} square>\r\n              <div>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required\r\n                  label=\"attraction Name\"\r\n                  id=\"name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={editattraction.name}\r\n                  onChange={(event) =>\r\n                    setEditattraction({\r\n                      ...editattraction,\r\n                      name: event.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required\r\n                  label=\"Location\"\r\n                  id=\"location\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={editattraction.location}\r\n                  onChange={(event) =>\r\n                    setEditattraction({\r\n                      ...editattraction,\r\n                      location: event.target.value,\r\n                    })\r\n                  }\r\n                />\r\n\r\n                <TextField\r\n                  className={classes.textField}\r\n                  required\r\n                  label=\"Age Restriction\"\r\n                  id=\"age_restriction\"\r\n                  type=\"number\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={editattraction.age_restriction}\r\n                  onChange={(event) =>\r\n                    setEditattraction({\r\n                      ...editattraction,\r\n                      age_restriction:\r\n                        event.target.value < 0\r\n                          ? (event.target.value = 0)\r\n                          : Number(event.target.value),\r\n                    })\r\n                  }\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  label=\"Description\"\r\n                  type=\"description\"\r\n                  variant=\"outlined\"\r\n                  rows=\"5\"\r\n                  multiline\r\n                  fullWidth\r\n                  rows={5}\r\n                  required\r\n                  value={editattraction.description}\r\n                  onChange={(event) =>\r\n                    setEditattraction({\r\n                      ...editattraction,\r\n                      description: event.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <CardActions>\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => confirmCreate()}\r\n                  >\r\n                    Confirm\r\n                  </Button>\r\n\r\n                  <Button\r\n                    size=\"small\"\r\n                    color=\"disable\"\r\n                    variant=\"contained\"\r\n                    onClick={() => history.push(`/dashboard/attractions`)}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </CardActions>\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {editattraction.picture === \"\" ? (\r\n              <Card square className={classes.cover}>\r\n                <CardMedia\r\n                  style={{ height: \"100%\" }}\r\n                  image={\"http://100.26.17.215:5000/default-coverImage.png\"}\r\n                  title=\"Add Picture\"\r\n                >\r\n                  <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                    <EditIcon\r\n                      style={{ margin: \"5px\", color: \"black\" }}\r\n                      onClick={() => {\r\n                        setOpenModal(true);\r\n                        setEditPicture(null);\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </CardMedia>\r\n              </Card>\r\n            ) : (\r\n              <Card square className={classes.cover}>\r\n                <CardMedia\r\n                  style={{ height: \"100%\" }}\r\n                  image={editattraction.picture}\r\n                  title=\"your assignment\"\r\n                >\r\n                  <IconButton aria-label=\"upload picture\" component=\"span\">\r\n                    <EditIcon\r\n                      style={{ margin: \"5px\", color: \"white\" }}\r\n                      onClick={() => {\r\n                        setOpenModal(true);\r\n                        setEditPicture(null);\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </CardMedia>\r\n              </Card>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Dialog open={openModal} onClose={handleCloseModal}>\r\n        <DialogContent>\r\n          <Grid justify=\"center\">\r\n            {loading ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <div>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Select Picture\r\n                </Typography>\r\n                <div style={{ marginBottom: 20 }}>\r\n                  {editPicture !== null ? editPicture.picture.name : null}\r\n                </div>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"label\"\r\n                  label=\"Select Picture\"\r\n                  style={{ margin: 5 }}\r\n                >\r\n                  Select\r\n                  <input\r\n                    label=\"Select Picture\"\r\n                    type=\"file\"\r\n                    hidden\r\n                    onChange={(event) =>\r\n                      setEditPicture({ picture: event.target.files[0] })\r\n                    }\r\n                  />\r\n                </Button>\r\n                <Button\r\n                  onClick={() => uploadPicture()}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  style={{ margin: 5 }}\r\n                >\r\n                  Upload\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch, Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport TrainIcon from \"@material-ui/icons/Train\";\r\nimport ManagerReports from \"./ManagerReports\";\r\nimport ManagerRides from \"./ManagerRides\";\r\nimport ManagerAttractions from \"./ManagerAttractions\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport ManagerAddRide from \"./ManagerAddRide\";\r\nimport ManagerInfoRide from \"./ManagerInfoRide\";\r\nimport ManagerInfoAttraction from \"./ManagerInfoAttraction\";\r\nimport ManagerAddAttraction from \"./ManagerAddAttraction\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nexport default function ManagerDashboard() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let { url, path } = useRouteMatch();\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    setTimeout(1000, history.push(\"/\"));\r\n  };\r\n  console.log(path);\r\n\r\n  const options = [\r\n    { text: \"Reports\", url: `${url}`, icon: <AssessmentIcon /> },\r\n    { text: \"Rides\", url: `${url}/rides`, icon: <TrainIcon /> },\r\n    { text: \"Attractions\", url: `${url}/attractions`, icon: <StoreIcon /> },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {localStorage.getItem(\"user_name\")}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {options.map((item, index) => (\r\n              <Link to={item.url} key={item.index} className={classes.link}>\r\n                <ListItem>\r\n                  <ListItemIcon>{item.icon}</ListItemIcon>\r\n                  <ListItemText primary={item.text} />\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem onClick={logout}>\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Logout\"} />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        <Switch>\r\n          <Route path={`${path}`} component={ManagerReports} exact />\r\n          <Route path={`${path}/rides`} component={ManagerRides} exact />\r\n          <Route path={`${path}/rides/add-ride`} component={ManagerAddRide} />\r\n          <Route\r\n            path={`${path}/rides/info-ride/:id`}\r\n            component={ManagerInfoRide}\r\n          />\r\n          <Route path={`${path}/attractions`} component={ManagerAttractions} exact/>\r\n          <Route path={`${path}/attractions/add-attraction`} component={ManagerAddAttraction} />\r\n          <Route\r\n            path={`${path}/attractions/info-attraction/:id`}\r\n            component={ManagerInfoAttraction} \r\n          />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport axios from \"axios\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { green, grey } from \"@material-ui/core/colors\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardTitle: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\",\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    justifyContent: \"center\",\r\n  },\r\n  buttons: {\r\n    paddingTop: 0,\r\n  },\r\n  paragraph: {\r\n    fontSize: 12,\r\n  },\r\n}));\r\n\r\nconst getInfo = (breakdown) => {\r\n  const indexT = breakdown.breakdown_date.indexOf(\"T\");\r\n  console.log(breakdown);\r\n\r\n  return {\r\n    r_id: breakdown.ride_id,\r\n    bd_id: breakdown.breakdown_id,\r\n    date: breakdown.breakdown_date.slice(0, indexT),\r\n    name: breakdown.name,\r\n    descript: breakdown.breakdown_description,\r\n    location: breakdown.location,\r\n    picture: breakdown.picture,\r\n    attendant_name: breakdown.first_name + \" \" + breakdown.last_name,\r\n  };\r\n};\r\n\r\nconst MaintainerFixRequests = () => {\r\n  const classes = useStyles();\r\n  const [openModal, setOpenModal] = React.useState(false);\r\n  const [openSnackbar, setOpenSnackBar] = React.useState(false);\r\n  const [requests, setRequest] = useState([]);\r\n  const [inspectIssue, setInspectIssue] = useState({});\r\n  const [fixMsg, setFixMsg] = useState(\"\");\r\n\r\n  const handleCloseSnackbar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackBar(false);\r\n  };\r\n  const handleCloseModal = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpenModal(false);\r\n  };\r\n  const handleClickOpenModal = (request) => {\r\n    setInspectIssue({\r\n      ride_id: request.r_id,\r\n      ride_name: request.name,\r\n      breakdown_description: request.descript,\r\n      breakdown_date: request.date,\r\n      attendant_name: request.attendant_name,\r\n    });\r\n    setOpenModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"maintainer/all-maintainence-requests\")\r\n      .then((res) => {\r\n        const req = res.data.map((breakdown) => getInfo(breakdown));\r\n        setRequest(req);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.res);\r\n      });\r\n  }, []);\r\n\r\n  const fixRide = () => {\r\n    const data = {\r\n      maintainer_id: Number(localStorage.getItem(\"user_id\")),\r\n      ride_id: inspectIssue.ride_id,\r\n    };\r\n    axios\r\n      .put(\"maintainer/resolve-request\", data)\r\n      .then((res) => {\r\n        setRequest(\r\n          requests.filter((request) => request.r_id !== inspectIssue.ride_id)\r\n        );\r\n        setFixMsg(`${inspectIssue.ride_name} was fixed!`);\r\n        setOpenSnackBar(true);\r\n        handleCloseModal();\r\n        console.log(res.data.broken);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <CssBaseline />\r\n        <Grid container spacing={4}>\r\n          {requests.map((request) => (\r\n            <Grid item key={request.bd_id} md={3}>\r\n              <Card className={classes.card}>\r\n                <CardMedia\r\n                  className={classes.cardMedia}\r\n                  image={request.picture}\r\n                  title=\"Image title\"\r\n                />\r\n                <CardContent classsName={classes.cardContent}>\r\n                  <Typography>Ride Name: {request.name}</Typography>\r\n                  <Typography>Location: {request.location}</Typography>\r\n                </CardContent>\r\n                <CardActions className={classes.buttons}>\r\n                  <Button\r\n                    onClick={() => handleClickOpenModal(request)}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Inspect Issue\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n              {/* {console.log(Object.keys(openModal))} */}\r\n            </Grid>\r\n          ))}\r\n          <Dialog open={openModal} onClose={handleCloseModal}>\r\n            <DialogTitle>{\"Breakdown Information\"}</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <strong>Breakdown Description: </strong>\r\n                {inspectIssue.breakdown_description}\r\n              </DialogContentText>\r\n              <DialogContentText>\r\n                <strong>Reported by Attendant: </strong>\r\n\r\n                {inspectIssue.attendant_name}\r\n              </DialogContentText>\r\n              <DialogContentText>\r\n                <strong>Date of Breakdown: </strong>\r\n\r\n                {inspectIssue.breakdown_date}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => fixRide()}\r\n              >\r\n                Fix Ride\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleCloseModal}\r\n                style={{ backgroundColor: grey[400] }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          <Snackbar\r\n            open={openSnackbar}\r\n            autoHideDuration={2000}\r\n            onClose={handleCloseSnackbar}\r\n          >\r\n            <Alert onClose={handleCloseSnackbar} severity=\"success\">\r\n              {fixMsg}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintainerFixRequests;\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch, Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport MaintainerFixRequests from \"./MaintainerFixRequests\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nexport default function MaintainerDashboard() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let { url, path } = useRouteMatch();\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    setTimeout(1000, history.push(\"/\"));\r\n  };\r\n  console.log(path);\r\n\r\n  const options = [\r\n    { text: \"Fix Requests\", url: `${url}`, icon: <BuildIcon /> },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {localStorage.getItem(\"user_name\")}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {options.map((item, index) => (\r\n              <Link to={item.url} key={item.index} className={classes.link}>\r\n                <ListItem>\r\n                  <ListItemIcon>{item.icon}</ListItemIcon>\r\n                  <ListItemText primary={item.text} />\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem onClick={logout}>\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Logout\"} />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        <Switch>\r\n          <Route path={`${path}`} component={MaintainerFixRequests} exact />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 1000,\r\n  },\r\n});\r\n\r\nconst NothingMessage = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ marginTop: 100 }}\r\n      >\r\n        <Grid item xs={12}>\r\n          <div>\r\n            <HourglassEmptyIcon fontSize=\"large\" />\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.root}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              {props.message}\r\n            </Typography>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NothingMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport axios from \"axios\";\r\nimport BrokenImageIcon from \"@material-ui/icons/BrokenImage\";\r\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\r\nimport OpacityIcon from \"@material-ui/icons/Opacity\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport NothingMessage from \"../../components/NothingMessage/NothingMessage\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 100,\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    width: 600,\r\n    height: \"100%\",\r\n  },\r\n  buttons: {\r\n    marginTop: \"20px\",\r\n  },\r\n}));\r\nconst boxStyle = { margin: \"10px 10px\", fontSize: 25 };\r\n\r\nexport default function AttendantAssignment() {\r\n  const classes = useStyles();\r\n  const [assignment, setAssignment] = useState({});\r\n  const [type, setType] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [snackMsg, setSnackMsg] = useState(\"\");\r\n  const [retrevied, setRetreived] = useState(false);\r\n  const [isRide, setIsRide] = useState(false);\r\n  const [ageRestriction, setAgeRestriction] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n\r\n  const handleClickSnack = (msg) => {\r\n    setSnackMsg(msg);\r\n    setOpenSnack(true);\r\n  };\r\n\r\n  const handleCloseSnack = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSnack(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"attendant/get-assignment\", {\r\n        attendant_id: localStorage.getItem(\"user_id\"),\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        if (res.data === null || res.data === \"No assignment\") {\r\n        } else {\r\n          setRetreived(true);\r\n          setAssignment(res.data.assignment);\r\n          setType(res.data.type);\r\n          if (res.data.type === \"ride\") {\r\n            setIsRide(true);\r\n          }\r\n        }\r\n        /*\r\n        if(res.data === \"No assignment\"){\r\n        }\r\n        \r\n        }*/\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const fixRequest = () => {\r\n    console.log(description);\r\n    axios\r\n      .put(\"attendant/request-maintainence\", {\r\n        ride_id: assignment.ride_id,\r\n        breakdown_description: description,\r\n        attendant_id: assignment.attendant_id,\r\n      })\r\n      .then((res) => {\r\n        handleClose();\r\n        setAssignment({ ...assignment, broken: true });\r\n        handleClickSnack(\"Fix request successfully made!\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const declareRainout = () => {\r\n    if (isRide) {\r\n      axios\r\n        .put(\"attendant/declare-rainout\", {\r\n          rainout_type: \"ride\",\r\n          ride_id: assignment.ride_id,\r\n          attendant_id: assignment.attendant_id,\r\n        })\r\n        .then((res) => {\r\n          setAssignment({ ...assignment, rainedout: true });\r\n          handleClickSnack(\"Rainout successfully declared!\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .put(\"attendant/declare-rainout\", {\r\n          rainout_type: \"attraction\",\r\n          attraction_id: assignment.attraction_id,\r\n          attendant_id: assignment.attendant_id,\r\n        })\r\n        .then((res) => {\r\n          setAssignment({ ...assignment, rainedout: true });\r\n          handleClickSnack(\"Rainout successfully declared!\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const endRainout = () => {\r\n    if (isRide) {\r\n      axios\r\n        .put(\"attendant/end-rainout\", {\r\n          rainout_type: \"ride\",\r\n          ride_id: assignment.ride_id,\r\n        })\r\n        .then((res) => {\r\n          setAssignment({ ...assignment, rainedout: false });\r\n          handleClickSnack(\"Rainout successfully ended!\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      axios\r\n        .put(\"attendant/end-rainout\", {\r\n          rainout_type: \"attraction\",\r\n          attraction_id: assignment.attraction_id,\r\n        })\r\n        .then((res) => {\r\n          setAssignment({ ...assignment, rainedout: false });\r\n          handleClickSnack(\"Rainout successfully ended!\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {retrevied === true ? (\r\n        <div>\r\n          <Card className={classes.root}>\r\n            <div className={classes.details}>\r\n              <CardContent className={classes.content}>\r\n                <Typography variant=\"h2\">{assignment.name}</Typography>\r\n                <Typography variant=\"h6\">Description</Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {assignment.description}\r\n                </Typography>\r\n                <Typography variant=\"h6\">Location</Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {assignment.location}\r\n                </Typography>\r\n                <Typography variant=\"h6\">Age Restriction</Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  {assignment.age_restriction\r\n                    ? assignment.age_restriction\r\n                    : \"None\"}\r\n                </Typography>\r\n                {isRide ? (\r\n                  <div>\r\n                    <Typography variant=\"h6\">Height Resctriction</Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                      {assignment.height_restriction\r\n                        ? `${Math.floor(assignment.height_restriction / 12)}' ${\r\n                            assignment.height_restriction % 12\r\n                          }'' `\r\n                        : \"None\"}\r\n                    </Typography>\r\n                  </div>\r\n                ) : null}\r\n\r\n                <Typography variant=\"h6\">Status</Typography>\r\n                <div>\r\n                  {!assignment.broken && !assignment.rainedout ? (\r\n                    <Tooltip title=\"Available\">\r\n                      <EventAvailableIcon fontSize=\"large\" />\r\n                    </Tooltip>\r\n                  ) : null}\r\n                  {assignment.broken ? (\r\n                    <Tooltip title=\"Broken\">\r\n                      <BrokenImageIcon fontSize=\"large\" />\r\n                    </Tooltip>\r\n                  ) : null}\r\n                  {assignment.rainedout ? (\r\n                    <Tooltip title=\"Rainedout\">\r\n                      <OpacityIcon fontSize=\"large\" />\r\n                    </Tooltip>\r\n                  ) : null}\r\n                </div>\r\n                <Divider />\r\n                <div className={classes.buttons}>\r\n                  {isRide ? (\r\n                    assignment.broken ? (\r\n                      <Button variant=\"contained\" color=\"disabled\">\r\n                        Make Fix Request\r\n                      </Button>\r\n                    ) : (\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        style={{ backgroundColor: red[\"A200\"], color: \"white\" }}\r\n                        onClick={() => setOpen(true)}\r\n                      >\r\n                        Make Fix Request\r\n                      </Button>\r\n                    )\r\n                  ) : null}\r\n\r\n                  {assignment.rainedout ? (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      style={{ marginLeft: \"15px\" }}\r\n                      color=\"primary\"\r\n                      onClick={() => endRainout()}\r\n                    >\r\n                      End Rainout\r\n                    </Button>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      style={{ marginLeft: \"15px\" }}\r\n                      onClick={() => declareRainout()}\r\n                    >\r\n                      Declare Rainout\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </CardContent>\r\n            </div>\r\n            <Card>\r\n              <CardMedia\r\n                className={classes.cover}\r\n                image={assignment.picture}\r\n                title=\"your assignment\"\r\n              />\r\n            </Card>\r\n          </Card>\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Please leave a short description of the problem\r\n              </DialogContentText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                type=\"description\"\r\n                fullWidth\r\n                variant=\"filled\"\r\n                multiline=\"true\"\r\n                rows=\"5\"\r\n                onChange={(event) => setDescription(event.target.value)}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={() => fixRequest()} color=\"primary\">\r\n                Confirm\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"disable\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      ) : (\r\n        <NothingMessage\r\n          message={\"The manager was notified! Please wait for an assignment.\"}\r\n        />\r\n      )}\r\n      <Snackbar\r\n        open={openSnack}\r\n        autoHideDuration={2000}\r\n        onClose={handleCloseSnack}\r\n      >\r\n        <Alert onClose={handleCloseSnack} severity=\"success\">\r\n          {snackMsg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch, useRouteMatch, Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport ConfirmationNumberIcon from \"@material-ui/icons/ConfirmationNumber\";\r\nimport AttendantAssignment from \"./AttendantAssignment\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    overflow: \"auto\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nexport default function AttendantDashboard() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let { url, path } = useRouteMatch();\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    setTimeout(1000, history.push(\"/\"));\r\n  };\r\n  console.log(path);\r\n\r\n  const options = [\r\n    { text: \"My Assignment\", url: `${url}`, icon: <AssignmentIcon /> },\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {localStorage.getItem(\"user_name\")}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <div className={classes.drawerContainer}>\r\n          <List>\r\n            {options.map((item, index) => (\r\n              <Link to={item.url} key={item.index} className={classes.link}>\r\n                <ListItem>\r\n                  <ListItemIcon>{item.icon}</ListItemIcon>\r\n                  <ListItemText primary={item.text} />\r\n                </ListItem>\r\n              </Link>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            <ListItem onClick={logout}>\r\n              <ListItemIcon>\r\n                <ExitToAppIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={\"Logout\"} />\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <Toolbar />\r\n        <Switch>\r\n          <Route path={`${path}`} component={AttendantAssignment} exact />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CustomerDashboard from \"../../pages/CustomerPages/CustomerDashboard\";\r\nimport ManagerDashboard from \"../../pages/ManagerPages/ManagerDashboard\";\r\nimport MaintainerDashboard from \"../../pages/MaintainerPages/MaintainerDashboard\";\r\nimport AttendantDashboard from \"../../pages/AttendantPages/AttendantDashboard\";\r\n\r\nconst UserRouter = () => {\r\n  const [userType, setUserType] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setUserType(localStorage.getItem(\"user_type\"));\r\n  }, []);\r\n\r\n  const routes = () => {\r\n    switch (userType) {\r\n      case \"customer\":\r\n        return <CustomerDashboard />;\r\n      case \"manager\":\r\n        return <ManagerDashboard />;\r\n      case \"attendant\":\r\n        return <AttendantDashboard />;\r\n      case \"maintainer\":\r\n        return <MaintainerDashboard />;\r\n      default:\r\n        return <div>Nothing Here</div>;\r\n    }\r\n  };\r\n\r\n  return <div>{routes()}</div>;\r\n};\r\n\r\nexport default UserRouter;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./pages/Login/Login\";\r\nimport Registration from \"./pages/Registration/Registration\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\nimport UserRouter from \"./components/UserRouter/UserRouter\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" component={Login} exact />\r\n          <Route path=\"/register\" component={Registration} />\r\n          <ProtectedRoute path=\"/dashboard\" component={UserRouter} />\r\n          <Route path=\"*\" component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport DataContextProvider from \"./contexts/dataContext\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://100.26.17.215:5000/\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DataContextProvider>\r\n      <App />\r\n    </DataContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}